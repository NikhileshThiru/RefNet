{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewerClean.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphViewerClean = () => {\n  _s();\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const [selectedPapers, setSelectedPapers] = useState(new Set());\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Mock data\n  const mockPapers = [{\n    id: 'paper1',\n    title: 'Deep Learning for Computer Vision',\n    authors: ['John Smith', 'Jane Doe'],\n    year: 2023,\n    citations: 150,\n    topics: ['Computer Vision', 'Deep Learning', 'CNN']\n  }, {\n    id: 'paper2',\n    title: 'Neural Networks in Natural Language Processing',\n    authors: ['Alice Johnson', 'Bob Wilson'],\n    year: 2022,\n    citations: 89,\n    topics: ['NLP', 'Neural Networks', 'Language Models']\n  }, {\n    id: 'paper3',\n    title: 'Reinforcement Learning Applications',\n    authors: ['Charlie Brown', 'Diana Prince'],\n    year: 2023,\n    citations: 67,\n    topics: ['Reinforcement Learning', 'AI', 'Robotics']\n  }, {\n    id: 'paper4',\n    title: 'Graph Neural Networks',\n    authors: ['Eve Adams', 'Frank Miller'],\n    year: 2021,\n    citations: 234,\n    topics: ['Graph Neural Networks', 'Deep Learning', 'Graph Theory']\n  }, {\n    id: 'paper5',\n    title: 'Transformer Architecture',\n    authors: ['Grace Lee', 'Henry Davis'],\n    year: 2022,\n    citations: 312,\n    topics: ['Transformers', 'Attention Mechanism', 'NLP']\n  }];\n  const mockCitations = [{\n    source: 'paper1',\n    target: 'paper2'\n  }, {\n    source: 'paper1',\n    target: 'paper3'\n  }, {\n    source: 'paper2',\n    target: 'paper4'\n  }, {\n    source: 'paper3',\n    target: 'paper5'\n  }, {\n    source: 'paper4',\n    target: 'paper5'\n  }];\n\n  // Search functionality\n  const filteredPapers = mockPapers.filter(paper => paper.title.toLowerCase().includes(searchQuery.toLowerCase()) || paper.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) || paper.topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase())));\n\n  // Event handlers\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleGraphClick = event => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n  const handleExport = () => {\n    console.log('Exporting selected papers:', Array.from(selectedPapers));\n  };\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - (showAIPanel ? 300 : 0),\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, [showAIPanel]);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on('zoom', event => {\n      g.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Prepare data\n    const nodes = mockPapers.map(paper => ({\n      id: paper.id,\n      title: paper.title,\n      authors: paper.authors,\n      year: paper.year,\n      citations: paper.citations\n    }));\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target\n    }));\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-300)).force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2));\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('stroke', '#999').attr('stroke-opacity', 0.6).attr('stroke-width', 1);\n\n    // Create nodes\n    const node = g.append('g').attr('class', 'nodes').selectAll('circle').data(nodes).enter().append('circle').attr('r', 8).attr('data-selected', d => selectedPapers.has(d.id) ? 'true' : 'false').attr('fill', d => selectedPapers.has(d.id) ? '#7c3aed' : '#3b82f6').attr('stroke', d => selectedPapers.has(d.id) ? '#5b21b6' : '#1e40af').attr('stroke-width', d => selectedPapers.has(d.id) ? 3 : 2).style('cursor', 'pointer').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // Add labels\n    const labels = g.append('g').attr('class', 'labels').selectAll('text').data(nodes).enter().append('text').attr('text-anchor', 'middle').attr('dy', 4).style('font-size', '10px').style('fill', '#333').style('pointer-events', 'none').text(d => {\n      var _d$authors$;\n      return `${((_d$authors$ = d.authors[0]) === null || _d$authors$ === void 0 ? void 0 : _d$authors$.split(' ')[0]) || 'Unknown'}, ${d.year}`;\n    });\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      labels.attr('x', d => d.x).attr('y', d => d.y);\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - using direct DOM manipulation to avoid re-renders\n    node.on('mouseover', function (event, d) {\n      // Create or update hover tooltip directly in DOM\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div').attr('class', 'hover-tooltip').style('position', 'absolute').style('background', 'rgba(0, 0, 0, 0.8)').style('color', 'white').style('padding', '8px 12px').style('border-radius', '4px').style('font-size', '12px').style('pointer-events', 'none').style('z-index', '1000').style('opacity', 0);\n      }\n      tooltip.html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 10 + 'px').transition().duration(200).style('opacity', 1);\n    });\n    node.on('mouseout', function (event, d) {\n      d3.select('body').select('.hover-tooltip').transition().duration(200).style('opacity', 0).remove();\n    });\n\n    // Click handler - using direct DOM manipulation to avoid re-renders\n    node.on('click', function (event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n\n      // Toggle selection in the DOM\n      d3.select(this).attr('data-selected', !isCurrentlySelected).attr('fill', !isCurrentlySelected ? '#7c3aed' : '#3b82f6').attr('stroke', !isCurrentlySelected ? '#5b21b6' : '#1e40af').attr('stroke-width', !isCurrentlySelected ? 3 : 2);\n\n      // Update React state without causing re-render of D3 elements\n      setSelectedPapers(prevSelected => {\n        const newSelected = new Set(prevSelected);\n        if (isCurrentlySelected) {\n          newSelected.delete(d.id);\n        } else {\n          newSelected.add(d.id);\n        }\n        setShowAIPanel(newSelected.size > 0);\n        return newSelected;\n      });\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [mockPapers, mockCitations, dimensions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => handleSearch(e.target.value),\n        placeholder: \"Enter Keyword, DOI\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        children: \"\\uD83D\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"references-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"panel-title\",\n          children: \"References\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references-list\",\n          children: [filteredPapers.map((paper, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `reference-item ${selectedPapers.has(paper.id) ? 'active' : ''}`,\n            onClick: () => {\n              setSelectedPapers(prevSelected => {\n                const newSelected = new Set(prevSelected);\n                if (newSelected.has(paper.id)) {\n                  newSelected.delete(paper.id);\n                } else {\n                  newSelected.add(paper.id);\n                }\n\n                // Update the corresponding node in the graph\n                const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n                if (!graphNode.empty()) {\n                  const isSelected = newSelected.has(paper.id);\n                  graphNode.attr('data-selected', isSelected ? 'true' : 'false').attr('fill', isSelected ? '#7c3aed' : '#3b82f6').attr('stroke', isSelected ? '#5b21b6' : '#1e40af').attr('stroke-width', isSelected ? 3 : 2);\n                }\n                setShowAIPanel(newSelected.size > 0);\n                return newSelected;\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-title\",\n              children: [index + 1, \". \", paper.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-authors\",\n              children: paper.authors.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-year\",\n              children: [paper.year, \" \\u2022 \", paper.citations, \" citations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-topics\",\n              children: paper.topics.slice(0, 3).map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"topic-tag\",\n                children: topic\n              }, topic, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)), filteredPapers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No papers found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: handleExport,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        onClick: handleGraphClick,\n        children: [selectedPapers.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-counter\",\n          children: [selectedPapers.size, \" selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click & drag to move nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click to select/unselect nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: dimensions.width,\n          height: dimensions.height,\n          className: \"graph-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), showAIPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Selected Papers (\", selectedPapers.size, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-papers\",\n          children: Array.from(selectedPapers).map(paperId => {\n            const paper = mockPapers.find(p => p.id === paperId);\n            return paper ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-paper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: paper.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [paper.authors.join(', '), \" (\", paper.year, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Citations: \", paper.citations]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this)]\n            }, paperId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphViewerClean, \"4wffQybQSXon9oH01SUUSIXDtYs=\");\n_c = GraphViewerClean;\nexport default GraphViewerClean;\nvar _c;\n$RefreshReg$(_c, \"GraphViewerClean\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","GraphViewerClean","_s","svgRef","simulationRef","selectedPapers","setSelectedPapers","Set","showAIPanel","setShowAIPanel","dimensions","setDimensions","width","height","searchQuery","setSearchQuery","mockPapers","id","title","authors","year","citations","topics","mockCitations","source","target","filteredPapers","filter","paper","toLowerCase","includes","some","author","topic","handleSearch","query","handleGraphClick","event","currentTarget","handleExport","console","log","Array","from","updateDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","length","svg","select","current","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","nodes","map","links","citation","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","link","data","enter","node","has","style","drag","dragstarted","dragged","dragended","labels","text","_d$authors$","split","x","y","active","alphaTarget","restart","subject","fx","fy","tooltip","empty","html","join","pageX","pageY","transition","duration","isCurrentlySelected","prevSelected","newSelected","delete","add","size","stop","className","children","type","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","graphNode","isSelected","slice","ref","paperId","find","p","_c","$RefreshReg$"],"sources":["/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewerClean.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\n\nconst GraphViewerClean = () => {\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const [selectedPapers, setSelectedPapers] = useState(new Set());\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Mock data\n  const mockPapers = [\n    {\n      id: 'paper1',\n      title: 'Deep Learning for Computer Vision',\n      authors: ['John Smith', 'Jane Doe'],\n      year: 2023,\n      citations: 150,\n      topics: ['Computer Vision', 'Deep Learning', 'CNN']\n    },\n    {\n      id: 'paper2',\n      title: 'Neural Networks in Natural Language Processing',\n      authors: ['Alice Johnson', 'Bob Wilson'],\n      year: 2022,\n      citations: 89,\n      topics: ['NLP', 'Neural Networks', 'Language Models']\n    },\n    {\n      id: 'paper3',\n      title: 'Reinforcement Learning Applications',\n      authors: ['Charlie Brown', 'Diana Prince'],\n      year: 2023,\n      citations: 67,\n      topics: ['Reinforcement Learning', 'AI', 'Robotics']\n    },\n    {\n      id: 'paper4',\n      title: 'Graph Neural Networks',\n      authors: ['Eve Adams', 'Frank Miller'],\n      year: 2021,\n      citations: 234,\n      topics: ['Graph Neural Networks', 'Deep Learning', 'Graph Theory']\n    },\n    {\n      id: 'paper5',\n      title: 'Transformer Architecture',\n      authors: ['Grace Lee', 'Henry Davis'],\n      year: 2022,\n      citations: 312,\n      topics: ['Transformers', 'Attention Mechanism', 'NLP']\n    }\n  ];\n\n  const mockCitations = [\n    { source: 'paper1', target: 'paper2' },\n    { source: 'paper1', target: 'paper3' },\n    { source: 'paper2', target: 'paper4' },\n    { source: 'paper3', target: 'paper5' },\n    { source: 'paper4', target: 'paper5' }\n  ];\n\n  // Search functionality\n  const filteredPapers = mockPapers.filter(paper =>\n    paper.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    paper.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) ||\n    paper.topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  // Event handlers\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const handleGraphClick = (event) => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n\n  const handleExport = () => {\n    console.log('Exporting selected papers:', Array.from(selectedPapers));\n  };\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - (showAIPanel ? 300 : 0),\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, [showAIPanel]);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Prepare data\n    const nodes = mockPapers.map(paper => ({\n      id: paper.id,\n      title: paper.title,\n      authors: paper.authors,\n      year: paper.year,\n      citations: paper.citations\n    }));\n\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target\n    }));\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(nodes)\n      .force('link', d3.forceLink(links).id(d => d.id).distance(100))\n      .force('charge', d3.forceManyBody().strength(-300))\n      .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2));\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(links)\n      .enter().append('line')\n      .attr('stroke', '#999')\n      .attr('stroke-opacity', 0.6)\n      .attr('stroke-width', 1);\n\n    // Create nodes\n    const node = g.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(nodes)\n      .enter().append('circle')\n      .attr('r', 8)\n      .attr('data-selected', d => selectedPapers.has(d.id) ? 'true' : 'false')\n      .attr('fill', d => selectedPapers.has(d.id) ? '#7c3aed' : '#3b82f6')\n      .attr('stroke', d => selectedPapers.has(d.id) ? '#5b21b6' : '#1e40af')\n      .attr('stroke-width', d => selectedPapers.has(d.id) ? 3 : 2)\n      .style('cursor', 'pointer')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    // Add labels\n    const labels = g.append('g')\n      .attr('class', 'labels')\n      .selectAll('text')\n      .data(nodes)\n      .enter().append('text')\n      .attr('text-anchor', 'middle')\n      .attr('dy', 4)\n      .style('font-size', '10px')\n      .style('fill', '#333')\n      .style('pointer-events', 'none')\n      .text(d => `${d.authors[0]?.split(' ')[0] || 'Unknown'}, ${d.year}`);\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n\n      labels\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - using direct DOM manipulation to avoid re-renders\n    node.on('mouseover', function(event, d) {\n      // Create or update hover tooltip directly in DOM\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div')\n          .attr('class', 'hover-tooltip')\n          .style('position', 'absolute')\n          .style('background', 'rgba(0, 0, 0, 0.8)')\n          .style('color', 'white')\n          .style('padding', '8px 12px')\n          .style('border-radius', '4px')\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .style('z-index', '1000')\n          .style('opacity', 0);\n      }\n      \n      tooltip\n        .html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `)\n        .style('left', (event.pageX + 10) + 'px')\n        .style('top', (event.pageY - 10) + 'px')\n        .transition()\n        .duration(200)\n        .style('opacity', 1);\n    });\n\n    node.on('mouseout', function(event, d) {\n      d3.select('body').select('.hover-tooltip')\n        .transition()\n        .duration(200)\n        .style('opacity', 0)\n        .remove();\n    });\n\n    // Click handler - using direct DOM manipulation to avoid re-renders\n    node.on('click', function(event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n      \n      // Toggle selection in the DOM\n      d3.select(this)\n        .attr('data-selected', !isCurrentlySelected)\n        .attr('fill', !isCurrentlySelected ? '#7c3aed' : '#3b82f6')\n        .attr('stroke', !isCurrentlySelected ? '#5b21b6' : '#1e40af')\n        .attr('stroke-width', !isCurrentlySelected ? 3 : 2);\n      \n      // Update React state without causing re-render of D3 elements\n      setSelectedPapers(prevSelected => {\n        const newSelected = new Set(prevSelected);\n        if (isCurrentlySelected) {\n          newSelected.delete(d.id);\n        } else {\n          newSelected.add(d.id);\n        }\n        setShowAIPanel(newSelected.size > 0);\n        return newSelected;\n      });\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [mockPapers, mockCitations, dimensions]);\n\n  return (\n    <div className=\"graph-viewer-container\">\n      {/* Search Bar */}\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => handleSearch(e.target.value)}\n          placeholder=\"Enter Keyword, DOI\"\n          className=\"search-input\"\n        />\n        <button className=\"search-btn\">🔍</button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* References Panel */}\n        <div className=\"references-panel\">\n          <h3 className=\"panel-title\">References</h3>\n          \n          <div className=\"references-list\">\n            {filteredPapers.map((paper, index) => (\n              <div\n                key={paper.id}\n                className={`reference-item ${\n                  selectedPapers.has(paper.id) ? 'active' : ''\n                }`}\n                onClick={() => {\n                  setSelectedPapers(prevSelected => {\n                    const newSelected = new Set(prevSelected);\n                    \n                    if (newSelected.has(paper.id)) {\n                      newSelected.delete(paper.id);\n                    } else {\n                      newSelected.add(paper.id);\n                    }\n                    \n                    // Update the corresponding node in the graph\n                    const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n                    if (!graphNode.empty()) {\n                      const isSelected = newSelected.has(paper.id);\n                      graphNode\n                        .attr('data-selected', isSelected ? 'true' : 'false')\n                        .attr('fill', isSelected ? '#7c3aed' : '#3b82f6')\n                        .attr('stroke', isSelected ? '#5b21b6' : '#1e40af')\n                        .attr('stroke-width', isSelected ? 3 : 2);\n                    }\n                    \n                    setShowAIPanel(newSelected.size > 0);\n                    return newSelected;\n                  });\n                }}\n              >\n                <div className=\"reference-title\">\n                  {index + 1}. {paper.title}\n                </div>\n                <div className=\"reference-authors\">\n                  {paper.authors.join(', ')}\n                </div>\n                <div className=\"reference-year\">\n                  {paper.year} • {paper.citations} citations\n                </div>\n                <div className=\"reference-topics\">\n                  {paper.topics.slice(0, 3).map(topic => (\n                    <span key={topic} className=\"topic-tag\">\n                      {topic}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            ))}\n            \n            {filteredPapers.length === 0 && (\n              <div className=\"no-results\">\n                No papers found. Try a different search term.\n              </div>\n            )}\n          </div>\n          \n          <button className=\"export-btn\" onClick={handleExport}>\n            Export\n          </button>\n        </div>\n\n        {/* Graph Visualization */}\n        <div className=\"graph-container\" onClick={handleGraphClick}>\n          {/* Selection Counter */}\n          {selectedPapers.size > 0 && (\n            <div className=\"selection-counter\">\n              {selectedPapers.size} selected\n            </div>\n          )}\n          \n          {/* Instructions */}\n          <div className=\"graph-instructions\">\n            <div className=\"instruction-item\">🖱️ Click & drag to move nodes</div>\n            <div className=\"instruction-item\">🖱️ Click to select/unselect nodes</div>\n          </div>\n          \n          <svg\n            ref={svgRef}\n            width={dimensions.width}\n            height={dimensions.height}\n            className=\"graph-svg\"\n          />\n          \n        </div>\n\n        {/* AI Panel */}\n        {showAIPanel && (\n          <div className=\"ai-panel\">\n            <h3>Selected Papers ({selectedPapers.size})</h3>\n            <div className=\"selected-papers\">\n              {Array.from(selectedPapers).map(paperId => {\n                const paper = mockPapers.find(p => p.id === paperId);\n                return paper ? (\n                  <div key={paperId} className=\"selected-paper\">\n                    <h4>{paper.title}</h4>\n                    <p>{paper.authors.join(', ')} ({paper.year})</p>\n                    <p>Citations: {paper.citations}</p>\n                  </div>\n                ) : null;\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GraphViewerClean;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}