{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GraphViewer = () => {\n  _s();\n  var _mockPapers$find2, _mockPapers$find3;\n  const svgRef = useRef();\n  const simulationRef = useRef(null);\n  const nodesRef = useRef([]);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [selectedPapers, setSelectedPapers] = useState(new Set());\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentView, setCurrentView] = useState('papers');\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [aiInput, setAiInput] = useState('');\n  const [isDragging, setIsDragging] = useState(false);\n  const hoverTimeoutRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n\n  // Keep ref updated with current selected papers\n  useEffect(() => {\n    console.log('Updating ref with selectedPapers:', Array.from(selectedPapers));\n    selectedPapersRef.current = selectedPapers;\n  }, [selectedPapers]);\n\n  // Initialize ref with current state\n  useEffect(() => {\n    selectedPapersRef.current = selectedPapers;\n  }, []);\n\n  // Mock data for testing - replace with actual API calls\n  const mockPapers = [{\n    id: 'paper1',\n    title: 'Deep Learning for Natural Language Processing',\n    authors: ['John Smith', 'Jane Doe'],\n    year: 2023,\n    abstract: 'This paper presents novel approaches to NLP using deep learning techniques...',\n    citations: 45,\n    doi: '10.1000/test1',\n    topics: ['NLP', 'Deep Learning', 'AI']\n  }, {\n    id: 'paper2',\n    title: 'Transformer Architecture in Modern AI',\n    authors: ['Alice Johnson', 'Bob Wilson'],\n    year: 2022,\n    abstract: 'We explore the transformer architecture and its applications...',\n    citations: 78,\n    doi: '10.1000/test2',\n    topics: ['Transformers', 'AI', 'Architecture']\n  }, {\n    id: 'paper3',\n    title: 'Attention Mechanisms in Neural Networks',\n    authors: ['Charlie Brown', 'Diana Prince'],\n    year: 2023,\n    abstract: 'This work investigates attention mechanisms and their effectiveness...',\n    citations: 32,\n    doi: '10.1000/test3',\n    topics: ['Attention', 'Neural Networks', 'AI']\n  }, {\n    id: 'paper4',\n    title: 'Graph Neural Networks for Knowledge Graphs',\n    authors: ['Eve Adams', 'Frank Miller'],\n    year: 2022,\n    abstract: 'We propose new methods for applying GNNs to knowledge graphs...',\n    citations: 56,\n    doi: '10.1000/test4',\n    topics: ['GNN', 'Knowledge Graphs', 'Graph Theory']\n  }, {\n    id: 'paper5',\n    title: 'Reinforcement Learning in Multi-Agent Systems',\n    authors: ['Grace Lee', 'Henry Chen'],\n    year: 2023,\n    abstract: 'This paper explores RL applications in multi-agent environments...',\n    citations: 28,\n    doi: '10.1000/test5',\n    topics: ['RL', 'Multi-Agent', 'AI']\n  }];\n\n  // Mock citation relationships\n  const mockCitations = [{\n    source: 'paper1',\n    target: 'paper2',\n    type: 'cites'\n  }, {\n    source: 'paper2',\n    target: 'paper3',\n    type: 'cites'\n  }, {\n    source: 'paper3',\n    target: 'paper1',\n    type: 'cites'\n  }, {\n    source: 'paper4',\n    target: 'paper1',\n    type: 'cites'\n  }, {\n    source: 'paper4',\n    target: 'paper2',\n    type: 'cites'\n  }, {\n    source: 'paper5',\n    target: 'paper1',\n    type: 'cites'\n  }, {\n    source: 'paper5',\n    target: 'paper4',\n    type: 'cites'\n  }];\n\n  // Filter papers based on search query\n  const filteredPapers = mockPapers.filter(paper => paper.title.toLowerCase().includes(searchQuery.toLowerCase()) || paper.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) || paper.topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase())));\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      var _svgRef$current;\n      const container = (_svgRef$current = svgRef.current) === null || _svgRef$current === void 0 ? void 0 : _svgRef$current.parentElement;\n      if (container) {\n        setDimensions({\n          width: container.clientWidth,\n          height: container.clientHeight\n        });\n      }\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create and update the graph\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group for zoom/pan\n    const g = svg.append('g');\n\n    // Create zoom behavior with smooth interaction\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).filter(event => {\n      // Allow zoom on wheel, but prevent during node dragging\n      return !isDragging && (event.type === 'wheel' || event.type === 'dblclick');\n    }).on('zoom', event => {\n      g.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Prepare data for D3 - preserve existing positions if available\n    const existingNodes = nodesRef.current;\n    const nodes = mockPapers.map(paper => {\n      const existing = existingNodes.find(n => n.id === paper.id);\n      return {\n        id: paper.id,\n        title: paper.title,\n        authors: paper.authors,\n        year: paper.year,\n        citations: paper.citations,\n        topics: paper.topics,\n        x: (existing === null || existing === void 0 ? void 0 : existing.x) || Math.random() * dimensions.width,\n        y: (existing === null || existing === void 0 ? void 0 : existing.y) || Math.random() * dimensions.height,\n        fx: (existing === null || existing === void 0 ? void 0 : existing.fx) || null,\n        fy: (existing === null || existing === void 0 ? void 0 : existing.fy) || null,\n        ...paper\n      };\n    });\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target,\n      type: citation.type\n    }));\n\n    // Store nodes for position preservation\n    nodesRef.current = nodes;\n\n    // Create force simulation with optimized parameters for smooth movement\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(100).strength(0.3)).force('charge', d3.forceManyBody().strength(-300).distanceMax(300)).force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2).strength(0.05)).force('collision', d3.forceCollide().radius(30).strength(0.5)).alphaDecay(0.01).velocityDecay(0.6).alpha(0.3);\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('class', 'link').style('stroke', '#555').style('stroke-opacity', 0.6).style('stroke-width', 1);\n\n    // Create nodes\n    const node = g.append('g').attr('class', 'nodes').selectAll('g').data(nodes).enter().append('g').attr('class', 'node').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // Add circles to nodes\n    node.append('circle').attr('r', d => Math.max(8, Math.min(20, Math.sqrt(d.citations) * 2))).style('fill', d => {\n      if (selectedPapersRef.current.has(d.id)) return '#7c3aed'; // Purple for selected\n      return '#6b7280'; // Gray for normal\n    }).style('stroke', d => {\n      if (selectedPapersRef.current.has(d.id)) return '#7c3aed'; // Purple for selected\n      return '#9ca3af'; // Light gray for normal\n    }).style('stroke-width', d => {\n      if (selectedPapersRef.current.has(d.id)) return 3;\n      return 1;\n    });\n\n    // Add labels to nodes\n    node.append('text').attr('class', 'node-label').attr('dy', 4).attr('text-anchor', 'middle').style('font-size', '10px').style('fill', '#ffffff').style('pointer-events', 'none').text(d => {\n      var _d$authors$;\n      return `${((_d$authors$ = d.authors[0]) === null || _d$authors$ === void 0 ? void 0 : _d$authors$.split(' ')[0]) || 'Unknown'}, ${d.year}`;\n    });\n\n    // Add hover effects with improved performance - using ONLY direct DOM manipulation\n    let currentHoveredNode = null;\n    node.on('mouseover', function (event, d) {\n      var _currentHoveredNode;\n      if (!isDragging && ((_currentHoveredNode = currentHoveredNode) === null || _currentHoveredNode === void 0 ? void 0 : _currentHoveredNode.id) !== d.id) {\n        // Clear any existing timeout\n        if (hoverTimeoutRef.current) {\n          clearTimeout(hoverTimeoutRef.current);\n        }\n        currentHoveredNode = d;\n\n        // NO React state updates - only direct DOM manipulation\n        // Update node colors directly - use current selection state from ref\n        const currentSelected = selectedPapersRef.current;\n        node.select('circle').style('fill', n => {\n          if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected (priority)\n          if (n.id === d.id) return '#7c3aed'; // Purple for hovered\n          return '#6b7280'; // Gray for normal\n        }).style('stroke', n => {\n          if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected (priority)\n          if (n.id === d.id) return '#7c3aed'; // Purple for hovered\n          return '#9ca3af'; // Light gray for normal\n        });\n\n        // Highlight connected nodes\n        const connectedNodes = new Set();\n        links.forEach(link => {\n          if (link.source.id === d.id) connectedNodes.add(link.target.id);\n          if (link.target.id === d.id) connectedNodes.add(link.source.id);\n        });\n\n        // Direct style updates for better performance\n        node.style('opacity', n => n.id === d.id || connectedNodes.has(n.id) ? 1 : 0.3);\n        link.style('opacity', l => l.source.id === d.id || l.target.id === d.id ? 1 : 0.1);\n      }\n    }).on('mouseout', function (event) {\n      if (!isDragging) {\n        hoverTimeoutRef.current = setTimeout(() => {\n          currentHoveredNode = null;\n\n          // Restore node colors directly - use current selection state from ref\n          const currentSelected = selectedPapersRef.current;\n          node.select('circle').style('fill', n => {\n            if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected\n            return '#6b7280'; // Gray for normal\n          }).style('stroke', n => {\n            if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected\n            return '#9ca3af'; // Light gray for normal\n          });\n\n          // Direct style updates for better performance\n          node.style('opacity', 1);\n          link.style('opacity', 0.6);\n        }, 100); // Slightly longer delay to prevent flashing\n      }\n    }).on('click', function (event, d) {\n      event.stopPropagation();\n\n      // Clear any hover timeout to prevent interference\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n        hoverTimeoutRef.current = null;\n      }\n\n      // Toggle selection - click to select/unselect\n      const currentSelected = selectedPapersRef.current;\n      const newSelected = new Set(currentSelected);\n      console.log('Click on node:', d.id);\n      console.log('Current selection before:', Array.from(currentSelected));\n      console.log('Is node currently selected?', currentSelected.has(d.id));\n      if (newSelected.has(d.id)) {\n        // Unselect if already selected\n        console.log('Unselecting node:', d.id);\n        newSelected.delete(d.id);\n      } else {\n        // Select if not selected\n        console.log('Selecting node:', d.id);\n        newSelected.add(d.id);\n      }\n      console.log('New selection after:', Array.from(newSelected));\n\n      // Update the ref immediately for drag functions\n      selectedPapersRef.current = newSelected;\n\n      // Update React state (this will trigger re-render but only for selection changes)\n      setSelectedPapers(newSelected);\n\n      // Show AI panel if any nodes are selected\n      if (newSelected.size > 0) {\n        setShowAIPanel(true);\n      } else {\n        setShowAIPanel(false);\n      }\n    });\n\n    // Update positions on simulation tick - no transitions during dragging for smoothness\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n\n      // Direct position updates for smooth dragging - no transitions\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n\n    // Drag functions - Optimized for smooth dragging\n    function dragstarted(event, d) {\n      setIsDragging(true);\n\n      // Clear any pending hover timeouts\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n        hoverTimeoutRef.current = null;\n      }\n\n      // If not selected, select this node (for dragging)\n      const currentSelected = selectedPapersRef.current;\n      if (!currentSelected.has(d.id)) {\n        const newSelected = new Set(currentSelected);\n        newSelected.add(d.id);\n        selectedPapersRef.current = newSelected;\n        setSelectedPapers(newSelected);\n        setShowAIPanel(true);\n      }\n\n      // Store initial positions for all selected nodes\n      const selectedNodes = nodes.filter(n => selectedPapersRef.current.has(n.id));\n      selectedNodes.forEach(node => {\n        node.fx = node.x;\n        node.fy = node.y;\n      });\n\n      // Temporarily disable forces during dragging for smoother movement\n      if (simulationRef.current) {\n        simulationRef.current.force('charge').strength(0);\n        simulationRef.current.force('collision').strength(0);\n        simulationRef.current.force('link').strength(0);\n        simulationRef.current.alphaTarget(0.3).restart();\n      }\n    }\n    function dragged(event, d) {\n      // Direct position update for immediate response\n      d.fx = event.x;\n      d.fy = event.y;\n\n      // Move all other selected nodes by the same offset\n      const currentSelected = selectedPapersRef.current;\n      const selectedNodes = nodes.filter(n => currentSelected.has(n.id) && n.id !== d.id);\n      const dx = event.x - d.x;\n      const dy = event.y - d.y;\n      selectedNodes.forEach(node => {\n        node.fx = node.x + dx;\n        node.fy = node.y + dy;\n      });\n    }\n    function dragended(event, d) {\n      setIsDragging(false);\n\n      // Restore simulation forces gradually\n      if (simulationRef.current) {\n        simulationRef.current.force('charge').strength(-300);\n        simulationRef.current.force('collision').strength(0.5);\n        simulationRef.current.force('link').strength(0.3);\n\n        // Keep selected nodes fixed in their new positions\n        const currentSelected = selectedPapersRef.current;\n        const selectedNodes = nodes.filter(n => currentSelected.has(n.id));\n        selectedNodes.forEach(node => {\n          node.fx = node.x;\n          node.fy = node.y;\n        });\n\n        // Gentle restart to let other nodes settle\n        simulationRef.current.alphaTarget(0.1).restart();\n      }\n    }\n\n    // Add function to unfix nodes when selection changes\n    const unfixAllNodes = () => {\n      nodes.forEach(node => {\n        node.fx = null;\n        node.fy = null;\n      });\n      if (simulationRef.current) {\n        simulationRef.current.alphaTarget(0.3).restart();\n      }\n    };\n\n    // Unfix nodes when selection is cleared\n    if (selectedPapers.size === 0) {\n      unfixAllNodes();\n    }\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n        simulationRef.current = null;\n      }\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n        hoverTimeoutRef.current = null;\n      }\n    };\n  }, [mockPapers, mockCitations, dimensions]); // Removed selectedPapers, hoveredNode, isDragging to prevent unnecessary re-renders\n\n  // Handle selection changes without recreating simulation\n  useEffect(() => {\n    if (!svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const node = svg.selectAll('.node');\n\n    // Update node styles based on selection - only when selection changes\n    const currentSelected = selectedPapersRef.current;\n    node.select('circle').style('fill', d => {\n      if (currentSelected.has(d.id)) return '#7c3aed'; // Purple for selected\n      return '#6b7280'; // Gray for normal\n    }).style('stroke', d => {\n      if (currentSelected.has(d.id)) return '#7c3aed'; // Purple for selected\n      return '#9ca3af'; // Light gray for normal\n    }).style('stroke-width', d => {\n      if (currentSelected.has(d.id)) return 3;\n      return 1;\n    });\n  }, [selectedPapers]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleExport = () => {\n    const exportData = {\n      papers: mockPapers,\n      citations: mockCitations,\n      timestamp: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'refnet-graph-export.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleSummarize = () => {\n    if (selectedPapers.size > 0 && aiInput.trim()) {\n      const selectedPaperTitles = Array.from(selectedPapers).map(id => {\n        var _mockPapers$find;\n        return (_mockPapers$find = mockPapers.find(p => p.id === id)) === null || _mockPapers$find === void 0 ? void 0 : _mockPapers$find.title;\n      }).join(', ');\n      console.log(`Summarizing \"${selectedPaperTitles}\" with query: \"${aiInput}\"`);\n      // Here you would call your AI service\n    }\n  };\n\n  // Add click handler to clear selection when clicking on empty space\n  const handleGraphClick = event => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n\n  // Function to unfix nodes and let them return to natural simulation\n  const unfixNodes = () => {\n    // This will be called by the simulation to unfix nodes\n    // We'll add this as a global function that can be called\n    window.unfixAllNodes = () => {\n      setSelectedPapers(new Set());\n      // The simulation will handle unfixing nodes when selectedPapers changes\n    };\n  };\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        selectedPapersRef.current = new Set();\n        setSelectedPapers(new Set());\n        setShowAIPanel(false);\n      } else if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        const allSelected = new Set(mockPapers.map(p => p.id));\n        selectedPapersRef.current = allSelected;\n        setSelectedPapers(allSelected);\n        setShowAIPanel(true);\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        const currentSelected = selectedPapersRef.current;\n        if (currentSelected.size > 0) {\n          // In a real app, this would delete the selected papers\n          console.log('Delete selected papers:', Array.from(currentSelected));\n        }\n      } else if (event.key === 'u' && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        // Unfix all nodes - let them return to natural simulation\n        selectedPapersRef.current = new Set();\n        setSelectedPapers(new Set());\n        setShowAIPanel(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [mockPapers]);\n\n  // Initialize unfix function\n  useEffect(() => {\n    unfixNodes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => handleSearch(e.target.value),\n        placeholder: \"Enter Keyword, DOI\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        children: \"\\uD83D\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"references-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"panel-title\",\n          children: \"References\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references-list\",\n          children: [filteredPapers.map((paper, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `reference-item ${selectedPapers.has(paper.id) ? 'active' : ''}`,\n            onClick: () => {\n              // Toggle selection for references panel\n              const currentSelected = selectedPapersRef.current;\n              const newSelected = new Set(currentSelected);\n              if (newSelected.has(paper.id)) {\n                newSelected.delete(paper.id);\n              } else {\n                newSelected.add(paper.id);\n              }\n              selectedPapersRef.current = newSelected;\n              setSelectedPapers(newSelected);\n              if (newSelected.size > 0) {\n                setShowAIPanel(true);\n              } else {\n                setShowAIPanel(false);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-title\",\n              children: [index + 1, \". \", paper.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-authors\",\n              children: paper.authors.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-year\",\n              children: [paper.year, \" \\u2022 \", paper.citations, \" citations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-topics\",\n              children: paper.topics.slice(0, 3).map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"topic-tag\",\n                children: topic\n              }, topic, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)), filteredPapers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No papers found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: handleExport,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        onClick: handleGraphClick,\n        children: [selectedPapers.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-counter\",\n          children: [selectedPapers.size, \" selected \\u2022 Fixed position\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click & drag to move nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\u2328\\uFE0F Ctrl+Click to multi-select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\u2328\\uFE0F Ctrl+U to unfix all nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: dimensions.width,\n          height: dimensions.height,\n          className: \"graph-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), hoveredNode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-details visible\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-details-title\",\n            children: hoveredNode.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-details-authors\",\n            children: hoveredNode.authors.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-details-year\",\n            children: [hoveredNode.year, \" \\u2022 \", hoveredNode.citations, \" citations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-details-topics\",\n            children: hoveredNode.topics.map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"topic-tag\",\n              children: topic\n            }, topic, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${currentView === 'papers' ? 'active' : ''}`,\n          onClick: () => setCurrentView('papers'),\n          title: \"Papers View\",\n          children: \"P\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${currentView === 'edges' ? 'active' : ''}`,\n          onClick: () => setCurrentView('edges'),\n          title: \"Edges View\",\n          children: \"E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${currentView === 'tags' ? 'active' : ''}`,\n          onClick: () => setCurrentView('tags'),\n          title: \"Tags View\",\n          children: \"T\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), showAIPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-panel visible\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-title\",\n          children: \"OpenAI O4-mini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setShowAIPanel(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 11\n      }, this), selectedPapers.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-paper-info\",\n        children: selectedPapers.size === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-paper-title\",\n            children: (_mockPapers$find2 = mockPapers.find(p => p.id === Array.from(selectedPapers)[0])) === null || _mockPapers$find2 === void 0 ? void 0 : _mockPapers$find2.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-paper-authors\",\n            children: (_mockPapers$find3 = mockPapers.find(p => p.id === Array.from(selectedPapers)[0])) === null || _mockPapers$find3 === void 0 ? void 0 : _mockPapers$find3.authors.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-paper-title\",\n          children: [selectedPapers.size, \" papers selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: aiInput,\n          onChange: e => setAiInput(e.target.value),\n          placeholder: \"Begin Typing...\",\n          className: \"ai-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"summarize-btn\",\n          onClick: handleSummarize,\n          children: \"\\u2B50 Summarize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphViewer, \"73rP67DhMmy5QRWanfU02LuffdU=\");\n_c = GraphViewer;\nexport default GraphViewer;\nvar _c;\n$RefreshReg$(_c, \"GraphViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","GraphViewer","_s","_mockPapers$find2","_mockPapers$find3","svgRef","simulationRef","nodesRef","dimensions","setDimensions","width","height","hoveredNode","setHoveredNode","selectedPapers","setSelectedPapers","Set","searchQuery","setSearchQuery","currentView","setCurrentView","showAIPanel","setShowAIPanel","aiInput","setAiInput","isDragging","setIsDragging","hoverTimeoutRef","selectedPapersRef","console","log","Array","from","current","mockPapers","id","title","authors","year","abstract","citations","doi","topics","mockCitations","source","target","type","filteredPapers","filter","paper","toLowerCase","includes","some","author","topic","updateDimensions","_svgRef$current","container","parentElement","clientWidth","clientHeight","window","addEventListener","removeEventListener","length","svg","select","selectAll","remove","g","append","zoom","scaleExtent","event","on","attr","transform","call","existingNodes","nodes","map","existing","find","n","x","Math","random","y","fx","fy","links","citation","simulation","forceSimulation","force","forceLink","d","distance","strength","forceManyBody","distanceMax","forceCenter","forceCollide","radius","alphaDecay","velocityDecay","alpha","link","data","enter","style","node","drag","dragstarted","dragged","dragended","max","min","sqrt","has","text","_d$authors$","split","currentHoveredNode","_currentHoveredNode","clearTimeout","currentSelected","connectedNodes","forEach","add","l","setTimeout","stopPropagation","newSelected","delete","size","selectedNodes","alphaTarget","restart","dx","dy","unfixAllNodes","stop","handleSearch","query","handleExport","exportData","papers","timestamp","Date","toISOString","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleSummarize","trim","selectedPaperTitles","_mockPapers$find","p","join","handleGraphClick","currentTarget","unfixNodes","handleKeyDown","key","ctrlKey","metaKey","preventDefault","allSelected","className","children","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","slice","ref","_c","$RefreshReg$"],"sources":["/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\n\nconst GraphViewer = () => {\n  const svgRef = useRef();\n  const simulationRef = useRef(null);\n  const nodesRef = useRef([]);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [selectedPapers, setSelectedPapers] = useState(new Set());\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentView, setCurrentView] = useState('papers');\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [aiInput, setAiInput] = useState('');\n  const [isDragging, setIsDragging] = useState(false);\n  const hoverTimeoutRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n\n  // Keep ref updated with current selected papers\n  useEffect(() => {\n    console.log('Updating ref with selectedPapers:', Array.from(selectedPapers));\n    selectedPapersRef.current = selectedPapers;\n  }, [selectedPapers]);\n\n  // Initialize ref with current state\n  useEffect(() => {\n    selectedPapersRef.current = selectedPapers;\n  }, []);\n\n  // Mock data for testing - replace with actual API calls\n  const mockPapers = [\n    {\n      id: 'paper1',\n      title: 'Deep Learning for Natural Language Processing',\n      authors: ['John Smith', 'Jane Doe'],\n      year: 2023,\n      abstract: 'This paper presents novel approaches to NLP using deep learning techniques...',\n      citations: 45,\n      doi: '10.1000/test1',\n      topics: ['NLP', 'Deep Learning', 'AI']\n    },\n    {\n      id: 'paper2',\n      title: 'Transformer Architecture in Modern AI',\n      authors: ['Alice Johnson', 'Bob Wilson'],\n      year: 2022,\n      abstract: 'We explore the transformer architecture and its applications...',\n      citations: 78,\n      doi: '10.1000/test2',\n      topics: ['Transformers', 'AI', 'Architecture']\n    },\n    {\n      id: 'paper3',\n      title: 'Attention Mechanisms in Neural Networks',\n      authors: ['Charlie Brown', 'Diana Prince'],\n      year: 2023,\n      abstract: 'This work investigates attention mechanisms and their effectiveness...',\n      citations: 32,\n      doi: '10.1000/test3',\n      topics: ['Attention', 'Neural Networks', 'AI']\n    },\n    {\n      id: 'paper4',\n      title: 'Graph Neural Networks for Knowledge Graphs',\n      authors: ['Eve Adams', 'Frank Miller'],\n      year: 2022,\n      abstract: 'We propose new methods for applying GNNs to knowledge graphs...',\n      citations: 56,\n      doi: '10.1000/test4',\n      topics: ['GNN', 'Knowledge Graphs', 'Graph Theory']\n    },\n    {\n      id: 'paper5',\n      title: 'Reinforcement Learning in Multi-Agent Systems',\n      authors: ['Grace Lee', 'Henry Chen'],\n      year: 2023,\n      abstract: 'This paper explores RL applications in multi-agent environments...',\n      citations: 28,\n      doi: '10.1000/test5',\n      topics: ['RL', 'Multi-Agent', 'AI']\n    }\n  ];\n\n  // Mock citation relationships\n  const mockCitations = [\n    { source: 'paper1', target: 'paper2', type: 'cites' },\n    { source: 'paper2', target: 'paper3', type: 'cites' },\n    { source: 'paper3', target: 'paper1', type: 'cites' },\n    { source: 'paper4', target: 'paper1', type: 'cites' },\n    { source: 'paper4', target: 'paper2', type: 'cites' },\n    { source: 'paper5', target: 'paper1', type: 'cites' },\n    { source: 'paper5', target: 'paper4', type: 'cites' }\n  ];\n\n  // Filter papers based on search query\n  const filteredPapers = mockPapers.filter(paper =>\n    paper.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    paper.authors.some(author => \n      author.toLowerCase().includes(searchQuery.toLowerCase())\n    ) ||\n    paper.topics.some(topic => \n      topic.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      const container = svgRef.current?.parentElement;\n      if (container) {\n        setDimensions({\n          width: container.clientWidth,\n          height: container.clientHeight\n        });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create and update the graph\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group for zoom/pan\n    const g = svg.append('g');\n\n    // Create zoom behavior with smooth interaction\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .filter(event => {\n        // Allow zoom on wheel, but prevent during node dragging\n        return !isDragging && (event.type === 'wheel' || event.type === 'dblclick');\n      })\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Prepare data for D3 - preserve existing positions if available\n    const existingNodes = nodesRef.current;\n    const nodes = mockPapers.map(paper => {\n      const existing = existingNodes.find(n => n.id === paper.id);\n      return {\n        id: paper.id,\n        title: paper.title,\n        authors: paper.authors,\n        year: paper.year,\n        citations: paper.citations,\n        topics: paper.topics,\n        x: existing?.x || Math.random() * dimensions.width,\n        y: existing?.y || Math.random() * dimensions.height,\n        fx: existing?.fx || null,\n        fy: existing?.fy || null,\n        ...paper\n      };\n    });\n\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target,\n      type: citation.type\n    }));\n\n    // Store nodes for position preservation\n    nodesRef.current = nodes;\n\n    // Create force simulation with optimized parameters for smooth movement\n    const simulation = d3.forceSimulation(nodes)\n      .force('link', d3.forceLink(links).id(d => d.id).distance(100).strength(0.3))\n      .force('charge', d3.forceManyBody().strength(-300).distanceMax(300))\n      .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2).strength(0.05))\n      .force('collision', d3.forceCollide().radius(30).strength(0.5))\n      .alphaDecay(0.01)\n      .velocityDecay(0.6)\n      .alpha(0.3);\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(links)\n      .enter().append('line')\n      .attr('class', 'link')\n      .style('stroke', '#555')\n      .style('stroke-opacity', 0.6)\n      .style('stroke-width', 1);\n\n    // Create nodes\n    const node = g.append('g')\n      .attr('class', 'nodes')\n      .selectAll('g')\n      .data(nodes)\n      .enter().append('g')\n      .attr('class', 'node')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    // Add circles to nodes\n    node.append('circle')\n      .attr('r', d => Math.max(8, Math.min(20, Math.sqrt(d.citations) * 2)))\n      .style('fill', d => {\n        if (selectedPapersRef.current.has(d.id)) return '#7c3aed'; // Purple for selected\n        return '#6b7280'; // Gray for normal\n      })\n      .style('stroke', d => {\n        if (selectedPapersRef.current.has(d.id)) return '#7c3aed'; // Purple for selected\n        return '#9ca3af'; // Light gray for normal\n      })\n      .style('stroke-width', d => {\n        if (selectedPapersRef.current.has(d.id)) return 3;\n        return 1;\n      });\n\n    // Add labels to nodes\n    node.append('text')\n      .attr('class', 'node-label')\n      .attr('dy', 4)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '10px')\n      .style('fill', '#ffffff')\n      .style('pointer-events', 'none')\n      .text(d => `${d.authors[0]?.split(' ')[0] || 'Unknown'}, ${d.year}`);\n\n    // Add hover effects with improved performance - using ONLY direct DOM manipulation\n    let currentHoveredNode = null;\n    \n    node\n      .on('mouseover', function(event, d) {\n        if (!isDragging && currentHoveredNode?.id !== d.id) {\n          // Clear any existing timeout\n          if (hoverTimeoutRef.current) {\n            clearTimeout(hoverTimeoutRef.current);\n          }\n          \n          currentHoveredNode = d;\n          \n          // NO React state updates - only direct DOM manipulation\n          // Update node colors directly - use current selection state from ref\n          const currentSelected = selectedPapersRef.current;\n          node.select('circle')\n            .style('fill', n => {\n              if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected (priority)\n              if (n.id === d.id) return '#7c3aed'; // Purple for hovered\n              return '#6b7280'; // Gray for normal\n            })\n            .style('stroke', n => {\n              if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected (priority)\n              if (n.id === d.id) return '#7c3aed'; // Purple for hovered\n              return '#9ca3af'; // Light gray for normal\n            });\n          \n          // Highlight connected nodes\n          const connectedNodes = new Set();\n          links.forEach(link => {\n            if (link.source.id === d.id) connectedNodes.add(link.target.id);\n            if (link.target.id === d.id) connectedNodes.add(link.source.id);\n          });\n\n          // Direct style updates for better performance\n          node.style('opacity', n => \n            n.id === d.id || connectedNodes.has(n.id) ? 1 : 0.3\n          );\n\n          link.style('opacity', l => \n            l.source.id === d.id || l.target.id === d.id ? 1 : 0.1\n          );\n        }\n      })\n      .on('mouseout', function(event) {\n        if (!isDragging) {\n          hoverTimeoutRef.current = setTimeout(() => {\n            currentHoveredNode = null;\n            \n            // Restore node colors directly - use current selection state from ref\n            const currentSelected = selectedPapersRef.current;\n            node.select('circle')\n              .style('fill', n => {\n                if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected\n                return '#6b7280'; // Gray for normal\n              })\n              .style('stroke', n => {\n                if (currentSelected.has(n.id)) return '#7c3aed'; // Purple for selected\n                return '#9ca3af'; // Light gray for normal\n              });\n            \n            // Direct style updates for better performance\n            node.style('opacity', 1);\n            link.style('opacity', 0.6);\n          }, 100); // Slightly longer delay to prevent flashing\n        }\n      })\n      .on('click', function(event, d) {\n        event.stopPropagation();\n        \n        // Clear any hover timeout to prevent interference\n        if (hoverTimeoutRef.current) {\n          clearTimeout(hoverTimeoutRef.current);\n          hoverTimeoutRef.current = null;\n        }\n        \n        // Toggle selection - click to select/unselect\n        const currentSelected = selectedPapersRef.current;\n        const newSelected = new Set(currentSelected);\n        \n        console.log('Click on node:', d.id);\n        console.log('Current selection before:', Array.from(currentSelected));\n        console.log('Is node currently selected?', currentSelected.has(d.id));\n        \n        if (newSelected.has(d.id)) {\n          // Unselect if already selected\n          console.log('Unselecting node:', d.id);\n          newSelected.delete(d.id);\n        } else {\n          // Select if not selected\n          console.log('Selecting node:', d.id);\n          newSelected.add(d.id);\n        }\n        \n        console.log('New selection after:', Array.from(newSelected));\n        \n        // Update the ref immediately for drag functions\n        selectedPapersRef.current = newSelected;\n        \n        // Update React state (this will trigger re-render but only for selection changes)\n        setSelectedPapers(newSelected);\n        \n        // Show AI panel if any nodes are selected\n        if (newSelected.size > 0) {\n          setShowAIPanel(true);\n        } else {\n          setShowAIPanel(false);\n        }\n      });\n\n    // Update positions on simulation tick - no transitions during dragging for smoothness\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      // Direct position updates for smooth dragging - no transitions\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n\n    // Drag functions - Optimized for smooth dragging\n    function dragstarted(event, d) {\n      setIsDragging(true);\n      \n      // Clear any pending hover timeouts\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n        hoverTimeoutRef.current = null;\n      }\n      \n      // If not selected, select this node (for dragging)\n      const currentSelected = selectedPapersRef.current;\n      if (!currentSelected.has(d.id)) {\n        const newSelected = new Set(currentSelected);\n        newSelected.add(d.id);\n        selectedPapersRef.current = newSelected;\n        setSelectedPapers(newSelected);\n        setShowAIPanel(true);\n      }\n      \n      // Store initial positions for all selected nodes\n      const selectedNodes = nodes.filter(n => selectedPapersRef.current.has(n.id));\n      selectedNodes.forEach(node => {\n        node.fx = node.x;\n        node.fy = node.y;\n      });\n      \n      // Temporarily disable forces during dragging for smoother movement\n      if (simulationRef.current) {\n        simulationRef.current.force('charge').strength(0);\n        simulationRef.current.force('collision').strength(0);\n        simulationRef.current.force('link').strength(0);\n        simulationRef.current.alphaTarget(0.3).restart();\n      }\n    }\n\n    function dragged(event, d) {\n      // Direct position update for immediate response\n      d.fx = event.x;\n      d.fy = event.y;\n      \n      // Move all other selected nodes by the same offset\n      const currentSelected = selectedPapersRef.current;\n      const selectedNodes = nodes.filter(n => currentSelected.has(n.id) && n.id !== d.id);\n      const dx = event.x - d.x;\n      const dy = event.y - d.y;\n      \n      selectedNodes.forEach(node => {\n        node.fx = node.x + dx;\n        node.fy = node.y + dy;\n      });\n    }\n\n    function dragended(event, d) {\n      setIsDragging(false);\n      \n      // Restore simulation forces gradually\n      if (simulationRef.current) {\n        simulationRef.current.force('charge').strength(-300);\n        simulationRef.current.force('collision').strength(0.5);\n        simulationRef.current.force('link').strength(0.3);\n        \n        // Keep selected nodes fixed in their new positions\n        const currentSelected = selectedPapersRef.current;\n        const selectedNodes = nodes.filter(n => currentSelected.has(n.id));\n        selectedNodes.forEach(node => {\n          node.fx = node.x;\n          node.fy = node.y;\n        });\n        \n        // Gentle restart to let other nodes settle\n        simulationRef.current.alphaTarget(0.1).restart();\n      }\n    }\n\n    // Add function to unfix nodes when selection changes\n    const unfixAllNodes = () => {\n      nodes.forEach(node => {\n        node.fx = null;\n        node.fy = null;\n      });\n      if (simulationRef.current) {\n        simulationRef.current.alphaTarget(0.3).restart();\n      }\n    };\n\n    // Unfix nodes when selection is cleared\n    if (selectedPapers.size === 0) {\n      unfixAllNodes();\n    }\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n        simulationRef.current = null;\n      }\n      if (hoverTimeoutRef.current) {\n        clearTimeout(hoverTimeoutRef.current);\n        hoverTimeoutRef.current = null;\n      }\n    };\n  }, [mockPapers, mockCitations, dimensions]); // Removed selectedPapers, hoveredNode, isDragging to prevent unnecessary re-renders\n\n  // Handle selection changes without recreating simulation\n  useEffect(() => {\n    if (!svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const node = svg.selectAll('.node');\n    \n    // Update node styles based on selection - only when selection changes\n    const currentSelected = selectedPapersRef.current;\n    node.select('circle')\n      .style('fill', d => {\n        if (currentSelected.has(d.id)) return '#7c3aed'; // Purple for selected\n        return '#6b7280'; // Gray for normal\n      })\n      .style('stroke', d => {\n        if (currentSelected.has(d.id)) return '#7c3aed'; // Purple for selected\n        return '#9ca3af'; // Light gray for normal\n      })\n      .style('stroke-width', d => {\n        if (currentSelected.has(d.id)) return 3;\n        return 1;\n      });\n  }, [selectedPapers]);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const handleExport = () => {\n    const exportData = {\n      papers: mockPapers,\n      citations: mockCitations,\n      timestamp: new Date().toISOString()\n    };\n    \n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: 'application/json'\n    });\n    \n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'refnet-graph-export.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const handleSummarize = () => {\n    if (selectedPapers.size > 0 && aiInput.trim()) {\n      const selectedPaperTitles = Array.from(selectedPapers).map(id => \n        mockPapers.find(p => p.id === id)?.title\n      ).join(', ');\n      console.log(`Summarizing \"${selectedPaperTitles}\" with query: \"${aiInput}\"`);\n      // Here you would call your AI service\n    }\n  };\n\n  // Add click handler to clear selection when clicking on empty space\n  const handleGraphClick = (event) => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n\n  // Function to unfix nodes and let them return to natural simulation\n  const unfixNodes = () => {\n    // This will be called by the simulation to unfix nodes\n    // We'll add this as a global function that can be called\n    window.unfixAllNodes = () => {\n      setSelectedPapers(new Set());\n      // The simulation will handle unfixing nodes when selectedPapers changes\n    };\n  };\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === 'Escape') {\n        selectedPapersRef.current = new Set();\n        setSelectedPapers(new Set());\n        setShowAIPanel(false);\n      } else if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        const allSelected = new Set(mockPapers.map(p => p.id));\n        selectedPapersRef.current = allSelected;\n        setSelectedPapers(allSelected);\n        setShowAIPanel(true);\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        const currentSelected = selectedPapersRef.current;\n        if (currentSelected.size > 0) {\n          // In a real app, this would delete the selected papers\n          console.log('Delete selected papers:', Array.from(currentSelected));\n        }\n      } else if (event.key === 'u' && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        // Unfix all nodes - let them return to natural simulation\n        selectedPapersRef.current = new Set();\n        setSelectedPapers(new Set());\n        setShowAIPanel(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [mockPapers]);\n\n  // Initialize unfix function\n  useEffect(() => {\n    unfixNodes();\n  }, []);\n\n  return (\n    <div className=\"graph-viewer-container\">\n      {/* Search Bar */}\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => handleSearch(e.target.value)}\n          placeholder=\"Enter Keyword, DOI\"\n          className=\"search-input\"\n        />\n        <button className=\"search-btn\">🔍</button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* References Panel */}\n        <div className=\"references-panel\">\n          <h3 className=\"panel-title\">References</h3>\n          \n          <div className=\"references-list\">\n            {filteredPapers.map((paper, index) => (\n              <div\n                key={paper.id}\n                className={`reference-item ${\n                  selectedPapers.has(paper.id) ? 'active' : ''\n                }`}\n                onClick={() => {\n                  // Toggle selection for references panel\n                  const currentSelected = selectedPapersRef.current;\n                  const newSelected = new Set(currentSelected);\n                  \n                  if (newSelected.has(paper.id)) {\n                    newSelected.delete(paper.id);\n                  } else {\n                    newSelected.add(paper.id);\n                  }\n                  \n                  selectedPapersRef.current = newSelected;\n                  setSelectedPapers(newSelected);\n                  \n                  if (newSelected.size > 0) {\n                    setShowAIPanel(true);\n                  } else {\n                    setShowAIPanel(false);\n                  }\n                }}\n              >\n                <div className=\"reference-title\">\n                  {index + 1}. {paper.title}\n                </div>\n                <div className=\"reference-authors\">\n                  {paper.authors.join(', ')}\n                </div>\n                <div className=\"reference-year\">\n                  {paper.year} • {paper.citations} citations\n                </div>\n                <div className=\"reference-topics\">\n                  {paper.topics.slice(0, 3).map(topic => (\n                    <span key={topic} className=\"topic-tag\">\n                      {topic}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            ))}\n            \n            {filteredPapers.length === 0 && (\n              <div className=\"no-results\">\n                No papers found. Try a different search term.\n              </div>\n            )}\n          </div>\n          \n          <button className=\"export-btn\" onClick={handleExport}>\n            Export\n          </button>\n        </div>\n\n        {/* Graph Visualization */}\n        <div className=\"graph-container\" onClick={handleGraphClick}>\n          {/* Selection Counter */}\n          {selectedPapers.size > 0 && (\n            <div className=\"selection-counter\">\n              {selectedPapers.size} selected • Fixed position\n            </div>\n          )}\n          \n          {/* Instructions */}\n          <div className=\"graph-instructions\">\n            <div className=\"instruction-item\">🖱️ Click & drag to move nodes</div>\n            <div className=\"instruction-item\">⌨️ Ctrl+Click to multi-select</div>\n            <div className=\"instruction-item\">⌨️ Ctrl+U to unfix all nodes</div>\n          </div>\n          \n          <svg\n            ref={svgRef}\n            width={dimensions.width}\n            height={dimensions.height}\n            className=\"graph-svg\"\n          />\n          \n          {hoveredNode && (\n            <div className=\"node-details visible\">\n              <div className=\"node-details-title\">{hoveredNode.title}</div>\n              <div className=\"node-details-authors\">\n                {hoveredNode.authors.join(', ')}\n              </div>\n              <div className=\"node-details-year\">\n                {hoveredNode.year} • {hoveredNode.citations} citations\n              </div>\n              <div className=\"node-details-topics\">\n                {hoveredNode.topics.map(topic => (\n                  <span key={topic} className=\"topic-tag\">\n                    {topic}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Control Panel */}\n        <div className=\"control-panel\">\n          <button\n            className={`control-btn ${currentView === 'papers' ? 'active' : ''}`}\n            onClick={() => setCurrentView('papers')}\n            title=\"Papers View\"\n          >\n            P\n          </button>\n          <button\n            className={`control-btn ${currentView === 'edges' ? 'active' : ''}`}\n            onClick={() => setCurrentView('edges')}\n            title=\"Edges View\"\n          >\n            E\n          </button>\n          <button\n            className={`control-btn ${currentView === 'tags' ? 'active' : ''}`}\n            onClick={() => setCurrentView('tags')}\n            title=\"Tags View\"\n          >\n            T\n          </button>\n        </div>\n      </div>\n\n      {/* AI Panel */}\n      {showAIPanel && (\n        <div className=\"ai-panel visible\">\n          <div className=\"ai-header\">\n            <span className=\"ai-title\">OpenAI O4-mini</span>\n            <button className=\"close-btn\" onClick={() => setShowAIPanel(false)}>\n              ×\n            </button>\n          </div>\n          \n          {selectedPapers.size > 0 && (\n            <div className=\"selected-paper-info\">\n              {selectedPapers.size === 1 ? (\n                <>\n                  <div className=\"selected-paper-title\">\n                    {mockPapers.find(p => p.id === Array.from(selectedPapers)[0])?.title}\n                  </div>\n                  <div className=\"selected-paper-authors\">\n                    {mockPapers.find(p => p.id === Array.from(selectedPapers)[0])?.authors.join(', ')}\n                  </div>\n                </>\n              ) : (\n                <div className=\"selected-paper-title\">\n                  {selectedPapers.size} papers selected\n                </div>\n              )}\n            </div>\n          )}\n          \n          <div className=\"ai-input-container\">\n            <input\n              type=\"text\"\n              value={aiInput}\n              onChange={(e) => setAiInput(e.target.value)}\n              placeholder=\"Begin Typing...\"\n              className=\"ai-input\"\n            />\n            <button className=\"summarize-btn\" onClick={handleSummarize}>\n              ⭐ Summarize\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GraphViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}