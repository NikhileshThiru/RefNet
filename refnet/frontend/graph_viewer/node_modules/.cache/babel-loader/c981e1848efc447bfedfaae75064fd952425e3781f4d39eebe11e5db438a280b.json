{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewerClean.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphViewerClean = () => {\n  _s();\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n  const [selectedPapers, setSelectedPapers] = useState([]);\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // NO React state updates at all - keep everything in D3/refs only\n\n  // Simplified timeline color function - solid colors with opacity\n  const getTimelineColor = (year, isSelected) => {\n    const minYear = 2019;\n    const maxYear = 2023;\n    const normalizedYear = (year - minYear) / (maxYear - minYear);\n\n    // Calculate transparency based on age (newer = more opaque)\n    const opacity = 0.3 + normalizedYear * 0.7; // 0.3 to 1.0 opacity\n\n    if (isSelected) {\n      // Selected nodes: solid purple with opacity\n      return `rgba(124, 58, 237, ${opacity})`;\n    } else {\n      // Unselected nodes: solid gold with opacity\n      return `rgba(255, 215, 0, ${opacity})`;\n    }\n  };\n\n  // Get timeline years for keymap\n  const getTimelineYears = () => {\n    const years = mockPapers.map(p => p.year).sort((a, b) => a - b);\n    const uniqueYears = [...new Set(years)];\n    return uniqueYears;\n  };\n\n  // Mock data - Expanded with more papers and connections\n  const mockPapers = [{\n    id: 'paper1',\n    title: 'Deep Learning for Computer Vision',\n    authors: ['John Smith', 'Jane Doe'],\n    year: 2023,\n    citations: 150,\n    topics: ['Computer Vision', 'Deep Learning', 'CNN']\n  }, {\n    id: 'paper2',\n    title: 'Neural Networks in Natural Language Processing',\n    authors: ['Alice Johnson', 'Bob Wilson'],\n    year: 2022,\n    citations: 89,\n    topics: ['NLP', 'Neural Networks', 'Language Models']\n  }, {\n    id: 'paper3',\n    title: 'Reinforcement Learning Applications',\n    authors: ['Charlie Brown', 'Diana Prince'],\n    year: 2023,\n    citations: 67,\n    topics: ['Reinforcement Learning', 'AI', 'Robotics']\n  }, {\n    id: 'paper4',\n    title: 'Graph Neural Networks',\n    authors: ['Eve Adams', 'Frank Miller'],\n    year: 2021,\n    citations: 234,\n    topics: ['Graph Neural Networks', 'Deep Learning', 'Graph Theory']\n  }, {\n    id: 'paper5',\n    title: 'Transformer Architecture',\n    authors: ['Grace Lee', 'Henry Davis'],\n    year: 2022,\n    citations: 312,\n    topics: ['Transformers', 'Attention Mechanism', 'NLP']\n  }, {\n    id: 'paper6',\n    title: 'Convolutional Neural Networks for Image Recognition',\n    authors: ['Michael Chen', 'Sarah Wilson'],\n    year: 2020,\n    citations: 445,\n    topics: ['CNN', 'Image Recognition', 'Computer Vision']\n  }, {\n    id: 'paper7',\n    title: 'Attention Mechanisms in Deep Learning',\n    authors: ['David Kim', 'Lisa Zhang'],\n    year: 2021,\n    citations: 178,\n    topics: ['Attention', 'Deep Learning', 'Neural Networks']\n  }, {\n    id: 'paper8',\n    title: 'Generative Adversarial Networks',\n    authors: ['Robert Taylor', 'Emma Brown'],\n    year: 2019,\n    citations: 523,\n    topics: ['GAN', 'Generative Models', 'Deep Learning']\n  }, {\n    id: 'paper9',\n    title: 'Recurrent Neural Networks for Sequence Modeling',\n    authors: ['Alex Rodriguez', 'Maria Garcia'],\n    year: 2020,\n    citations: 267,\n    topics: ['RNN', 'Sequence Modeling', 'NLP']\n  }, {\n    id: 'paper10',\n    title: 'Self-Supervised Learning in Computer Vision',\n    authors: ['James Wilson', 'Anna Thompson'],\n    year: 2022,\n    citations: 189,\n    topics: ['Self-Supervised Learning', 'Computer Vision', 'Representation Learning']\n  }, {\n    id: 'paper11',\n    title: 'Federated Learning: A Survey',\n    authors: ['Kevin Lee', 'Rachel Green'],\n    year: 2021,\n    citations: 156,\n    topics: ['Federated Learning', 'Privacy', 'Distributed Learning']\n  }, {\n    id: 'paper12',\n    title: 'Explainable AI: Methods and Applications',\n    authors: ['Tom Anderson', 'Sophie Martin'],\n    year: 2023,\n    citations: 98,\n    topics: ['Explainable AI', 'Interpretability', 'Machine Learning']\n  }];\n  const mockCitations = [\n  // Original connections\n  {\n    source: 'paper1',\n    target: 'paper2'\n  }, {\n    source: 'paper1',\n    target: 'paper3'\n  }, {\n    source: 'paper2',\n    target: 'paper4'\n  }, {\n    source: 'paper3',\n    target: 'paper5'\n  }, {\n    source: 'paper4',\n    target: 'paper5'\n  },\n  // Computer Vision cluster\n  {\n    source: 'paper1',\n    target: 'paper6'\n  }, {\n    source: 'paper6',\n    target: 'paper10'\n  }, {\n    source: 'paper1',\n    target: 'paper10'\n  },\n  // NLP cluster\n  {\n    source: 'paper2',\n    target: 'paper5'\n  }, {\n    source: 'paper2',\n    target: 'paper9'\n  }, {\n    source: 'paper5',\n    target: 'paper7'\n  }, {\n    source: 'paper9',\n    target: 'paper7'\n  },\n  // Deep Learning cluster\n  {\n    source: 'paper4',\n    target: 'paper7'\n  }, {\n    source: 'paper4',\n    target: 'paper8'\n  }, {\n    source: 'paper7',\n    target: 'paper8'\n  }, {\n    source: 'paper1',\n    target: 'paper4'\n  },\n  // Cross-domain connections\n  {\n    source: 'paper3',\n    target: 'paper8'\n  }, {\n    source: 'paper5',\n    target: 'paper8'\n  }, {\n    source: 'paper6',\n    target: 'paper8'\n  },\n  // AI Ethics and Applications\n  {\n    source: 'paper11',\n    target: 'paper12'\n  }, {\n    source: 'paper3',\n    target: 'paper12'\n  }, {\n    source: 'paper8',\n    target: 'paper12'\n  },\n  // Additional connections for richer graph\n  {\n    source: 'paper2',\n    target: 'paper11'\n  }, {\n    source: 'paper4',\n    target: 'paper11'\n  }, {\n    source: 'paper6',\n    target: 'paper1'\n  }, {\n    source: 'paper9',\n    target: 'paper2'\n  }, {\n    source: 'paper10',\n    target: 'paper6'\n  }];\n\n  // Search functionality\n  const filteredPapers = mockPapers.filter(paper => paper.title.toLowerCase().includes(searchQuery.toLowerCase()) || paper.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) || paper.topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase())));\n\n  // Event handlers\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleGraphClick = event => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n  const handleExport = () => {\n    console.log('Exporting selected papers:', Array.from(selectedPapers));\n  };\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - (showAIPanel ? 300 : 0),\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, [showAIPanel]);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on('zoom', event => {\n      g.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Prepare data\n    const nodes = mockPapers.map(paper => ({\n      id: paper.id,\n      title: paper.title,\n      authors: paper.authors,\n      year: paper.year,\n      citations: paper.citations\n    }));\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target\n    }));\n\n    // Create force simulation with collision detection for larger nodes\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(120)).force('charge', d3.forceManyBody().strength(-400)).force('collision', d3.forceCollide().radius(d => Math.max(12, Math.min(35, Math.sqrt(d.citations) * 1.5)) + 5).strength(0.8)).force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2));\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('stroke', '#ffd700').attr('stroke-opacity', 0.4).attr('stroke-width', 1);\n\n    // Create nodes with size based on citations\n    const node = g.append('g').attr('class', 'nodes').selectAll('circle').data(nodes).enter().append('circle').attr('r', d => Math.max(12, Math.min(35, Math.sqrt(d.citations) * 1.5))).attr('data-id', d => d.id).attr('data-selected', d => selectedPapersRef.current.has(d.id) ? 'true' : 'false').attr('fill', d => getTimelineColor(d.year, selectedPapersRef.current.has(d.id))).attr('stroke', 'none').style('filter', d => selectedPapersRef.current.has(d.id) ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none').style('cursor', 'pointer').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // Add labels positioned above nodes with better styling\n    const labels = g.append('g').attr('class', 'labels').selectAll('text').data(nodes).enter().append('text').attr('text-anchor', 'middle').attr('dy', -25) // Position above the node\n    .attr('data-id', d => d.id).style('font-size', '11px') // Slightly bigger for better readability\n    .style('fill', '#ffffff') // White text for better contrast\n    .style('font-weight', '500').style('text-shadow', '1px 1px 2px rgba(0,0,0,0.8)').style('pointer-events', 'none').style('opacity', 0.9) // Slightly more opaque for better visibility\n    .text(d => {\n      var _d$authors$;\n      return `${((_d$authors$ = d.authors[0]) === null || _d$authors$ === void 0 ? void 0 : _d$authors$.split(' ')[0]) || 'Unknown'}, ${d.year}`;\n    });\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      labels.attr('x', d => d.x).attr('y', d => d.y);\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - highlight connected nodes and dim others\n    node.on('mouseover', function (event, d) {\n      // Find connected node IDs\n      const connectedNodeIds = new Set();\n      const connectedLinkIds = new Set();\n\n      // Find connected nodes through links\n      links.forEach(link => {\n        if (link.source.id === d.id) {\n          connectedNodeIds.add(link.target.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        } else if (link.target.id === d.id) {\n          connectedNodeIds.add(link.source.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        }\n      });\n\n      // Dim all nodes except hovered and connected ones\n      node.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 1; // Keep hovered and connected nodes fully visible\n        } else {\n          return 0.1; // Dim unconnected nodes\n        }\n      });\n\n      // Hide text for unconnected nodes\n      labels.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 0.8; // Keep text visible for hovered and connected nodes\n        } else {\n          return 0; // Hide text for unconnected nodes\n        }\n      });\n\n      // Highlight connected links, dim others\n      link.style('opacity', linkData => {\n        const linkId = `${linkData.source.id}-${linkData.target.id}`;\n        if (connectedLinkIds.has(linkId)) {\n          return 1; // Highlight connected links\n        } else {\n          return 0.1; // Dim unconnected links\n        }\n      });\n\n      // Create or update hover tooltip\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div').attr('class', 'hover-tooltip').style('position', 'absolute').style('background', 'rgba(0, 0, 0, 0.9)').style('color', '#ffd700').style('padding', '8px 12px').style('border-radius', '4px').style('font-size', '12px').style('pointer-events', 'none').style('z-index', '1000').style('opacity', 0).style('border', '1px solid #ffd700');\n      }\n      tooltip.html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 10 + 'px').transition().duration(200).style('opacity', 1);\n    });\n    node.on('mouseout', function (event, d) {\n      // Reset all nodes to full opacity\n      node.style('opacity', 1);\n\n      // Reset all text to normal opacity\n      labels.style('opacity', 0.8);\n\n      // Reset all links to normal opacity\n      link.style('opacity', 0.4);\n\n      // Remove tooltip\n      d3.select('body').select('.hover-tooltip').transition().duration(200).style('opacity', 0).remove();\n    });\n\n    // Click handler - using ONLY direct DOM manipulation, NO React state updates\n    node.on('click', function (event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n\n      // Toggle selection in the DOM\n      d3.select(this).attr('data-selected', !isCurrentlySelected).attr('fill', getTimelineColor(d.year, !isCurrentlySelected)).style('filter', !isCurrentlySelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n\n      // Update text color to match selection state\n      const textElement = d3.select(`text[data-id=\"${d.id}\"]`);\n      textElement.style('fill', '#ffffff'); // White text for all states\n\n      // Update ref immediately\n      if (isCurrentlySelected) {\n        selectedPapersRef.current.delete(d.id);\n      } else {\n        selectedPapersRef.current.add(d.id);\n      }\n\n      // Update the corresponding reference item in the left panel\n      const referenceItem = document.querySelector(`[data-paper-id=\"${d.id}\"]`);\n      if (referenceItem) {\n        if (isCurrentlySelected) {\n          referenceItem.classList.remove('active');\n        } else {\n          referenceItem.classList.add('active');\n        }\n      } else {\n        console.log('Reference item not found for paper ID:', d.id);\n      }\n\n      // NO React state updates to prevent re-renders\n      // The AI panel and other UI will be updated separately if needed\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [mockPapers, mockCitations, dimensions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => handleSearch(e.target.value),\n        placeholder: \"Enter Keyword, DOI\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        children: \"\\uD83D\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"references-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"panel-title\",\n          children: \"References\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), selectedPapers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-count\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [selectedPapers.length, \" selected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-list\",\n            children: selectedPapers.map(paperId => {\n              var _paper$authors$;\n              const paper = mockPapers.find(p => p.id === paperId);\n              return paper ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-item\",\n                children: [((_paper$authors$ = paper.authors[0]) === null || _paper$authors$ === void 0 ? void 0 : _paper$authors$.split(' ')[0]) || 'Unknown', \", \", paper.year]\n              }, paperId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references-list\",\n          children: [filteredPapers.map((paper, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-paper-id\": paper.id,\n            className: \"reference-item\",\n            onClick: event => {\n              const isCurrentlySelected = selectedPapersRef.current.has(paper.id);\n\n              // Update ref\n              if (isCurrentlySelected) {\n                selectedPapersRef.current.delete(paper.id);\n              } else {\n                selectedPapersRef.current.add(paper.id);\n              }\n\n              // Update the corresponding node in the graph\n              const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n              if (!graphNode.empty()) {\n                const isSelected = !isCurrentlySelected;\n                graphNode.attr('data-selected', isSelected ? 'true' : 'false').attr('fill', getTimelineColor(paper.year, isSelected)).style('filter', isSelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n              }\n\n              // Update the text color to match selection state\n              const textElement = d3.select(`text[data-id=\"${paper.id}\"]`);\n              textElement.style('fill', '#ffffff'); // White text for all states\n\n              // Update this reference item's visual state directly\n              const isSelected = !isCurrentlySelected;\n              if (isSelected) {\n                event.currentTarget.classList.add('active');\n              } else {\n                event.currentTarget.classList.remove('active');\n              }\n\n              // NO React state updates to prevent re-renders\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-title\",\n              children: [index + 1, \". \", paper.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-authors\",\n              children: paper.authors.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-year\",\n              children: [paper.year, \" \\u2022 \", paper.citations, \" citations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reference-topics\",\n              children: paper.topics.slice(0, 3).map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"topic-tag\",\n                children: topic\n              }, topic, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)), filteredPapers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No papers found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: handleExport,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        onClick: handleGraphClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click & drag to move nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click to select/unselect nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: dimensions.width,\n          height: dimensions.height,\n          className: \"graph-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-keymap\",\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: 'rgba(0, 0, 0, 0.8)',\n        padding: '15px 25px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 12px rgba(255, 215, 0, 0.3)',\n        border: '1px solid #ffd700',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '20px',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          fontWeight: 'bold',\n          color: '#ffd700'\n        },\n        children: \"Timeline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), getTimelineYears().map(year => {\n        const minYear = 2019;\n        const maxYear = 2023;\n        const normalizedYear = (year - minYear) / (maxYear - minYear);\n        const opacity = 0.3 + normalizedYear * 0.7;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '20px',\n              borderRadius: '50%',\n              background: `rgba(255, 215, 0, ${opacity})`,\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.3)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '12px',\n              color: '#ffd700',\n              fontWeight: '500'\n            },\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '11px',\n          color: '#ffd700',\n          marginLeft: '10px',\n          opacity: 0.7\n        },\n        children: \"(Newer = More Opaque)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphViewerClean, \"6P+bnKEHU41HQsQ0igUJIearR1M=\");\n_c = GraphViewerClean;\nexport default GraphViewerClean;\nvar _c;\n$RefreshReg$(_c, \"GraphViewerClean\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","GraphViewerClean","_s","svgRef","simulationRef","selectedPapersRef","Set","selectedPapers","setSelectedPapers","showAIPanel","setShowAIPanel","dimensions","setDimensions","width","height","searchQuery","setSearchQuery","getTimelineColor","year","isSelected","minYear","maxYear","normalizedYear","opacity","getTimelineYears","years","mockPapers","map","p","sort","a","b","uniqueYears","id","title","authors","citations","topics","mockCitations","source","target","filteredPapers","filter","paper","toLowerCase","includes","some","author","topic","handleSearch","query","handleGraphClick","event","currentTarget","handleExport","console","log","Array","from","updateDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","length","svg","select","current","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","nodes","links","citation","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCollide","radius","Math","max","min","sqrt","forceCenter","link","data","enter","node","has","style","drag","dragstarted","dragged","dragended","labels","text","_d$authors$","split","x","y","active","alphaTarget","restart","subject","fx","fy","connectedNodeIds","connectedLinkIds","forEach","add","nodeData","linkData","linkId","tooltip","empty","html","join","pageX","pageY","transition","duration","isCurrentlySelected","textElement","delete","referenceItem","document","querySelector","classList","stop","className","children","type","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","paperId","_paper$authors$","find","index","onClick","graphNode","slice","ref","position","bottom","left","background","padding","borderRadius","boxShadow","border","display","alignItems","gap","zIndex","fontSize","fontWeight","color","marginLeft","_c","$RefreshReg$"],"sources":["/Users/nikhilesh/Code/refnet/RefNet/refnet/frontend/graph_viewer/src/components/GraphViewerClean.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './GraphViewer.css';\n\nconst GraphViewerClean = () => {\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n  const [selectedPapers, setSelectedPapers] = useState([]);\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // NO React state updates at all - keep everything in D3/refs only\n\n  // Simplified timeline color function - solid colors with opacity\n  const getTimelineColor = (year, isSelected) => {\n    const minYear = 2019;\n    const maxYear = 2023;\n    const normalizedYear = (year - minYear) / (maxYear - minYear);\n    \n    // Calculate transparency based on age (newer = more opaque)\n    const opacity = 0.3 + (normalizedYear * 0.7); // 0.3 to 1.0 opacity\n    \n    if (isSelected) {\n      // Selected nodes: solid purple with opacity\n      return `rgba(124, 58, 237, ${opacity})`;\n    } else {\n      // Unselected nodes: solid gold with opacity\n      return `rgba(255, 215, 0, ${opacity})`;\n    }\n  };\n\n  // Get timeline years for keymap\n  const getTimelineYears = () => {\n    const years = mockPapers.map(p => p.year).sort((a, b) => a - b);\n    const uniqueYears = [...new Set(years)];\n    return uniqueYears;\n  };\n\n  // Mock data - Expanded with more papers and connections\n  const mockPapers = [\n    {\n      id: 'paper1',\n      title: 'Deep Learning for Computer Vision',\n      authors: ['John Smith', 'Jane Doe'],\n      year: 2023,\n      citations: 150,\n      topics: ['Computer Vision', 'Deep Learning', 'CNN']\n    },\n    {\n      id: 'paper2',\n      title: 'Neural Networks in Natural Language Processing',\n      authors: ['Alice Johnson', 'Bob Wilson'],\n      year: 2022,\n      citations: 89,\n      topics: ['NLP', 'Neural Networks', 'Language Models']\n    },\n    {\n      id: 'paper3',\n      title: 'Reinforcement Learning Applications',\n      authors: ['Charlie Brown', 'Diana Prince'],\n      year: 2023,\n      citations: 67,\n      topics: ['Reinforcement Learning', 'AI', 'Robotics']\n    },\n    {\n      id: 'paper4',\n      title: 'Graph Neural Networks',\n      authors: ['Eve Adams', 'Frank Miller'],\n      year: 2021,\n      citations: 234,\n      topics: ['Graph Neural Networks', 'Deep Learning', 'Graph Theory']\n    },\n    {\n      id: 'paper5',\n      title: 'Transformer Architecture',\n      authors: ['Grace Lee', 'Henry Davis'],\n      year: 2022,\n      citations: 312,\n      topics: ['Transformers', 'Attention Mechanism', 'NLP']\n    },\n    {\n      id: 'paper6',\n      title: 'Convolutional Neural Networks for Image Recognition',\n      authors: ['Michael Chen', 'Sarah Wilson'],\n      year: 2020,\n      citations: 445,\n      topics: ['CNN', 'Image Recognition', 'Computer Vision']\n    },\n    {\n      id: 'paper7',\n      title: 'Attention Mechanisms in Deep Learning',\n      authors: ['David Kim', 'Lisa Zhang'],\n      year: 2021,\n      citations: 178,\n      topics: ['Attention', 'Deep Learning', 'Neural Networks']\n    },\n    {\n      id: 'paper8',\n      title: 'Generative Adversarial Networks',\n      authors: ['Robert Taylor', 'Emma Brown'],\n      year: 2019,\n      citations: 523,\n      topics: ['GAN', 'Generative Models', 'Deep Learning']\n    },\n    {\n      id: 'paper9',\n      title: 'Recurrent Neural Networks for Sequence Modeling',\n      authors: ['Alex Rodriguez', 'Maria Garcia'],\n      year: 2020,\n      citations: 267,\n      topics: ['RNN', 'Sequence Modeling', 'NLP']\n    },\n    {\n      id: 'paper10',\n      title: 'Self-Supervised Learning in Computer Vision',\n      authors: ['James Wilson', 'Anna Thompson'],\n      year: 2022,\n      citations: 189,\n      topics: ['Self-Supervised Learning', 'Computer Vision', 'Representation Learning']\n    },\n    {\n      id: 'paper11',\n      title: 'Federated Learning: A Survey',\n      authors: ['Kevin Lee', 'Rachel Green'],\n      year: 2021,\n      citations: 156,\n      topics: ['Federated Learning', 'Privacy', 'Distributed Learning']\n    },\n    {\n      id: 'paper12',\n      title: 'Explainable AI: Methods and Applications',\n      authors: ['Tom Anderson', 'Sophie Martin'],\n      year: 2023,\n      citations: 98,\n      topics: ['Explainable AI', 'Interpretability', 'Machine Learning']\n    }\n  ];\n\n  const mockCitations = [\n    // Original connections\n    { source: 'paper1', target: 'paper2' },\n    { source: 'paper1', target: 'paper3' },\n    { source: 'paper2', target: 'paper4' },\n    { source: 'paper3', target: 'paper5' },\n    { source: 'paper4', target: 'paper5' },\n    \n    // Computer Vision cluster\n    { source: 'paper1', target: 'paper6' },\n    { source: 'paper6', target: 'paper10' },\n    { source: 'paper1', target: 'paper10' },\n    \n    // NLP cluster\n    { source: 'paper2', target: 'paper5' },\n    { source: 'paper2', target: 'paper9' },\n    { source: 'paper5', target: 'paper7' },\n    { source: 'paper9', target: 'paper7' },\n    \n    // Deep Learning cluster\n    { source: 'paper4', target: 'paper7' },\n    { source: 'paper4', target: 'paper8' },\n    { source: 'paper7', target: 'paper8' },\n    { source: 'paper1', target: 'paper4' },\n    \n    // Cross-domain connections\n    { source: 'paper3', target: 'paper8' },\n    { source: 'paper5', target: 'paper8' },\n    { source: 'paper6', target: 'paper8' },\n    \n    // AI Ethics and Applications\n    { source: 'paper11', target: 'paper12' },\n    { source: 'paper3', target: 'paper12' },\n    { source: 'paper8', target: 'paper12' },\n    \n    // Additional connections for richer graph\n    { source: 'paper2', target: 'paper11' },\n    { source: 'paper4', target: 'paper11' },\n    { source: 'paper6', target: 'paper1' },\n    { source: 'paper9', target: 'paper2' },\n    { source: 'paper10', target: 'paper6' }\n  ];\n\n  // Search functionality\n  const filteredPapers = mockPapers.filter(paper =>\n    paper.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    paper.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) ||\n    paper.topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  // Event handlers\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const handleGraphClick = (event) => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n\n  const handleExport = () => {\n    console.log('Exporting selected papers:', Array.from(selectedPapers));\n  };\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - (showAIPanel ? 300 : 0),\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, [showAIPanel]);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || mockPapers.length === 0) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Prepare data\n    const nodes = mockPapers.map(paper => ({\n      id: paper.id,\n      title: paper.title,\n      authors: paper.authors,\n      year: paper.year,\n      citations: paper.citations\n    }));\n\n    const links = mockCitations.map(citation => ({\n      source: citation.source,\n      target: citation.target\n    }));\n\n    // Create force simulation with collision detection for larger nodes\n    const simulation = d3.forceSimulation(nodes)\n      .force('link', d3.forceLink(links).id(d => d.id).distance(120))\n      .force('charge', d3.forceManyBody().strength(-400))\n      .force('collision', d3.forceCollide().radius(d => Math.max(12, Math.min(35, Math.sqrt(d.citations) * 1.5)) + 5).strength(0.8))\n      .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2));\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links\n    const link = g.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(links)\n      .enter().append('line')\n      .attr('stroke', '#ffd700')\n      .attr('stroke-opacity', 0.4)\n      .attr('stroke-width', 1);\n\n    // Create nodes with size based on citations\n    const node = g.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(nodes)\n      .enter().append('circle')\n      .attr('r', d => Math.max(12, Math.min(35, Math.sqrt(d.citations) * 1.5)))\n      .attr('data-id', d => d.id)\n      .attr('data-selected', d => selectedPapersRef.current.has(d.id) ? 'true' : 'false')\n      .attr('fill', d => getTimelineColor(d.year, selectedPapersRef.current.has(d.id)))\n      .attr('stroke', 'none')\n      .style('filter', d => selectedPapersRef.current.has(d.id) ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none')\n      .style('cursor', 'pointer')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    // Add labels positioned above nodes with better styling\n    const labels = g.append('g')\n      .attr('class', 'labels')\n      .selectAll('text')\n      .data(nodes)\n      .enter().append('text')\n      .attr('text-anchor', 'middle')\n      .attr('dy', -25) // Position above the node\n      .attr('data-id', d => d.id)\n      .style('font-size', '11px') // Slightly bigger for better readability\n      .style('fill', '#ffffff') // White text for better contrast\n      .style('font-weight', '500')\n      .style('text-shadow', '1px 1px 2px rgba(0,0,0,0.8)')\n      .style('pointer-events', 'none')\n      .style('opacity', 0.9) // Slightly more opaque for better visibility\n      .text(d => `${d.authors[0]?.split(' ')[0] || 'Unknown'}, ${d.year}`);\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n\n      labels\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - highlight connected nodes and dim others\n    node.on('mouseover', function(event, d) {\n      // Find connected node IDs\n      const connectedNodeIds = new Set();\n      const connectedLinkIds = new Set();\n      \n      // Find connected nodes through links\n      links.forEach(link => {\n        if (link.source.id === d.id) {\n          connectedNodeIds.add(link.target.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        } else if (link.target.id === d.id) {\n          connectedNodeIds.add(link.source.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        }\n      });\n      \n      // Dim all nodes except hovered and connected ones\n      node.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 1; // Keep hovered and connected nodes fully visible\n        } else {\n          return 0.1; // Dim unconnected nodes\n        }\n      });\n      \n      // Hide text for unconnected nodes\n      labels.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 0.8; // Keep text visible for hovered and connected nodes\n        } else {\n          return 0; // Hide text for unconnected nodes\n        }\n      });\n      \n      // Highlight connected links, dim others\n      link.style('opacity', linkData => {\n        const linkId = `${linkData.source.id}-${linkData.target.id}`;\n        if (connectedLinkIds.has(linkId)) {\n          return 1; // Highlight connected links\n        } else {\n          return 0.1; // Dim unconnected links\n        }\n      });\n      \n      // Create or update hover tooltip\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div')\n          .attr('class', 'hover-tooltip')\n          .style('position', 'absolute')\n          .style('background', 'rgba(0, 0, 0, 0.9)')\n          .style('color', '#ffd700')\n          .style('padding', '8px 12px')\n          .style('border-radius', '4px')\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .style('z-index', '1000')\n          .style('opacity', 0)\n          .style('border', '1px solid #ffd700');\n      }\n      \n      tooltip\n        .html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `)\n        .style('left', (event.pageX + 10) + 'px')\n        .style('top', (event.pageY - 10) + 'px')\n        .transition()\n        .duration(200)\n        .style('opacity', 1);\n    });\n\n    node.on('mouseout', function(event, d) {\n      // Reset all nodes to full opacity\n      node.style('opacity', 1);\n      \n      // Reset all text to normal opacity\n      labels.style('opacity', 0.8);\n      \n      // Reset all links to normal opacity\n      link.style('opacity', 0.4);\n      \n      // Remove tooltip\n      d3.select('body').select('.hover-tooltip')\n        .transition()\n        .duration(200)\n        .style('opacity', 0)\n        .remove();\n    });\n\n    // Click handler - using ONLY direct DOM manipulation, NO React state updates\n    node.on('click', function(event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n      \n      // Toggle selection in the DOM\n      d3.select(this)\n        .attr('data-selected', !isCurrentlySelected)\n        .attr('fill', getTimelineColor(d.year, !isCurrentlySelected))\n        .style('filter', !isCurrentlySelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n      \n      // Update text color to match selection state\n      const textElement = d3.select(`text[data-id=\"${d.id}\"]`);\n      textElement.style('fill', '#ffffff'); // White text for all states\n      \n      // Update ref immediately\n      if (isCurrentlySelected) {\n        selectedPapersRef.current.delete(d.id);\n      } else {\n        selectedPapersRef.current.add(d.id);\n      }\n      \n      // Update the corresponding reference item in the left panel\n      const referenceItem = document.querySelector(`[data-paper-id=\"${d.id}\"]`);\n      if (referenceItem) {\n        if (isCurrentlySelected) {\n          referenceItem.classList.remove('active');\n        } else {\n          referenceItem.classList.add('active');\n        }\n      } else {\n        console.log('Reference item not found for paper ID:', d.id);\n      }\n      \n      // NO React state updates to prevent re-renders\n      // The AI panel and other UI will be updated separately if needed\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [mockPapers, mockCitations, dimensions]);\n\n  return (\n    <div className=\"graph-viewer-container\">\n      {/* Search Bar */}\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => handleSearch(e.target.value)}\n          placeholder=\"Enter Keyword, DOI\"\n          className=\"search-input\"\n        />\n        <button className=\"search-btn\">🔍</button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* References Panel */}\n        <div className=\"references-panel\">\n          <h3 className=\"panel-title\">References</h3>\n          \n          {selectedPapers.length > 0 && (\n            <div className=\"selected-info\">\n              <div className=\"selected-count\">\n                <strong>{selectedPapers.length} selected</strong>\n              </div>\n              <div className=\"selected-list\">\n                {selectedPapers.map(paperId => {\n                  const paper = mockPapers.find(p => p.id === paperId);\n                  return paper ? (\n                    <div key={paperId} className=\"selected-item\">\n                      {paper.authors[0]?.split(' ')[0] || 'Unknown'}, {paper.year}\n                    </div>\n                  ) : null;\n                })}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"references-list\">\n            {filteredPapers.map((paper, index) => (\n              <div\n                key={paper.id}\n                data-paper-id={paper.id}\n                className=\"reference-item\"\n                onClick={(event) => {\n                  const isCurrentlySelected = selectedPapersRef.current.has(paper.id);\n                  \n                  // Update ref\n                  if (isCurrentlySelected) {\n                    selectedPapersRef.current.delete(paper.id);\n                  } else {\n                    selectedPapersRef.current.add(paper.id);\n                  }\n                  \n                  // Update the corresponding node in the graph\n                  const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n                  if (!graphNode.empty()) {\n                    const isSelected = !isCurrentlySelected;\n                    graphNode\n                      .attr('data-selected', isSelected ? 'true' : 'false')\n                      .attr('fill', getTimelineColor(paper.year, isSelected))\n                      .style('filter', isSelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n                  }\n                  \n                  // Update the text color to match selection state\n                  const textElement = d3.select(`text[data-id=\"${paper.id}\"]`);\n                  textElement.style('fill', '#ffffff'); // White text for all states\n                  \n                  // Update this reference item's visual state directly\n                  const isSelected = !isCurrentlySelected;\n                  if (isSelected) {\n                    event.currentTarget.classList.add('active');\n                  } else {\n                    event.currentTarget.classList.remove('active');\n                  }\n                  \n                  // NO React state updates to prevent re-renders\n                }}\n              >\n                <div className=\"reference-title\">\n                  {index + 1}. {paper.title}\n                </div>\n                <div className=\"reference-authors\">\n                  {paper.authors.join(', ')}\n                </div>\n                <div className=\"reference-year\">\n                  {paper.year} • {paper.citations} citations\n                </div>\n                <div className=\"reference-topics\">\n                  {paper.topics.slice(0, 3).map(topic => (\n                    <span key={topic} className=\"topic-tag\">\n                      {topic}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            ))}\n            \n            {filteredPapers.length === 0 && (\n              <div className=\"no-results\">\n                No papers found. Try a different search term.\n              </div>\n            )}\n          </div>\n          \n          <button className=\"export-btn\" onClick={handleExport}>\n            Export\n          </button>\n        </div>\n\n        {/* Graph Visualization */}\n        <div className=\"graph-container\" onClick={handleGraphClick}>\n          {/* Instructions */}\n          <div className=\"graph-instructions\">\n            <div className=\"instruction-item\">🖱️ Click & drag to move nodes</div>\n            <div className=\"instruction-item\">🖱️ Click to select/unselect nodes</div>\n          </div>\n          \n          <svg\n            ref={svgRef}\n            width={dimensions.width}\n            height={dimensions.height}\n            className=\"graph-svg\"\n          />\n          \n        </div>\n\n        {/* AI Panel - Removed to prevent re-renders */}\n      </div>\n\n      {/* Timeline Keymap */}\n      <div className=\"timeline-keymap\" style={{\n        position: 'fixed',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: 'rgba(0, 0, 0, 0.8)',\n        padding: '15px 25px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 12px rgba(255, 215, 0, 0.3)',\n        border: '1px solid #ffd700',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '20px',\n        zIndex: 1000\n      }}>\n        <div style={{ fontSize: '14px', fontWeight: 'bold', color: '#ffd700' }}>\n          Timeline:\n        </div>\n        {getTimelineYears().map(year => {\n          const minYear = 2019;\n          const maxYear = 2023;\n          const normalizedYear = (year - minYear) / (maxYear - minYear);\n          const opacity = 0.3 + (normalizedYear * 0.7);\n          \n          return (\n            <div key={year} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n              <div style={{\n                width: '20px',\n                height: '20px',\n                borderRadius: '50%',\n                background: `rgba(255, 215, 0, ${opacity})`,\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.3)'\n              }}></div>\n              <span style={{ fontSize: '12px', color: '#ffd700', fontWeight: '500' }}>\n                {year}\n              </span>\n            </div>\n          );\n        })}\n        <div style={{ fontSize: '11px', color: '#ffd700', marginLeft: '10px', opacity: 0.7 }}>\n          (Newer = More Opaque)\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GraphViewerClean;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}