{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvachayapathy/Projects/RefNet/refnet/frontend/src/components/GraphViewerClean.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport * as d3 from 'd3';\nimport { graphAPI, paperAPI } from '../services/api';\nimport './GraphViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphViewerClean = () => {\n  _s();\n  var _location$state, _paperDetails$authors;\n  const {\n    paperId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n  const [selectedPapers, setSelectedPapers] = useState([]);\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [paperDetails, setPaperDetails] = useState(null);\n  const [iterations, setIterations] = useState(2);\n  const [citedLimit, setCitedLimit] = useState(2);\n  const [refLimit, setRefLimit] = useState(1);\n\n  // Get initial paper IDs from location state or params\n  const initialPaperIds = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.paperIds) || (paperId ? [paperId] : []);\n\n  // NO React state updates at all - keep everything in D3/refs only\n\n  // Function to update selected info display using direct DOM manipulation\n  const updateSelectedInfo = () => {\n    const container = document.getElementById('selected-info-container');\n    if (!container) return;\n    const selectedCount = selectedPapersRef.current.size;\n    if (selectedCount > 0) {\n      const selectedPapers = Array.from(selectedPapersRef.current);\n      const selectedList = selectedPapers.map(paperId => {\n        var _paper$authors, _paper$authors$;\n        const paper = graphData.nodes.find(p => p.id === paperId);\n        return paper ? `${((_paper$authors = paper.authors) === null || _paper$authors === void 0 ? void 0 : (_paper$authors$ = _paper$authors[0]) === null || _paper$authors$ === void 0 ? void 0 : _paper$authors$.split(' ')[0]) || 'No Author'}, ${paper.year}` : '';\n      }).filter(Boolean);\n      container.innerHTML = `\n        <div class=\"selected-info\">\n          <div class=\"selected-count\">\n            <strong>${selectedCount} selected</strong>\n          </div>\n          <div class=\"selected-list\">\n            ${selectedList.map(item => `<div class=\"selected-item\">${item}</div>`).join('')}\n          </div>\n        </div>\n      `;\n    } else {\n      container.innerHTML = '';\n    }\n  };\n\n  // Simplified timeline color function - solid colors with opacity\n  const getTimelineColor = (year, isSelected) => {\n    if (graphData.nodes.length === 0) return isSelected ? 'rgba(124, 58, 237, 0.8)' : 'rgba(255, 215, 0, 0.8)';\n    const years = graphData.nodes.map(n => n.year).filter(y => y);\n    const minYear = Math.min(...years);\n    const maxYear = Math.max(...years);\n    const normalizedYear = (year - minYear) / (maxYear - minYear);\n\n    // Calculate transparency based on age (newer = more opaque)\n    const opacity = 0.3 + normalizedYear * 0.7; // 0.3 to 1.0 opacity\n\n    if (isSelected) {\n      // Selected nodes: solid purple with opacity\n      return `rgba(124, 58, 237, ${opacity})`;\n    } else {\n      // Unselected nodes: solid gold with opacity\n      return `rgba(255, 215, 0, ${opacity})`;\n    }\n  };\n\n  // Get timeline years for keymap\n  const getTimelineYears = () => {\n    const years = graphData.nodes.map(p => p.year).filter(y => y).sort((a, b) => a - b);\n    const uniqueYears = [...new Set(years)];\n    return uniqueYears;\n  };\n\n  // Load graph data from API\n  const loadGraphData = async () => {\n    if (initialPaperIds.length === 0) {\n      setError('No paper ID provided');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      let response;\n      if (initialPaperIds.length === 1) {\n        response = await graphAPI.buildGraph(initialPaperIds[0], iterations, citedLimit, refLimit);\n      } else {\n        response = await graphAPI.buildMultipleGraph(initialPaperIds, iterations, citedLimit, refLimit);\n      }\n      if (response && response.nodes) {\n        setGraphData({\n          nodes: response.nodes || [],\n          links: response.edges || [] // Backend returns 'edges', not 'links'\n        });\n      } else {\n        throw new Error('Invalid graph data received');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error loading graph data:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to load graph data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load paper details for the main paper\n  const loadPaperDetails = async () => {\n    if (!paperId) return;\n    try {\n      const response = await paperAPI.getPaper(paperId);\n      setPaperDetails(response);\n    } catch (err) {\n      console.error('Error loading paper details:', err);\n    }\n  };\n\n  // Rebuild graph with new parameters\n  const rebuildGraph = async () => {\n    await loadGraphData();\n  };\n\n  // Use API data instead of mock data\n  const papers = graphData.nodes || [];\n  const citations = graphData.links || [];\n\n  // Search functionality\n  const filteredPapers = papers.filter(paper => {\n    var _paper$title, _paper$authors2, _paper$topics;\n    return ((_paper$title = paper.title) === null || _paper$title === void 0 ? void 0 : _paper$title.toLowerCase().includes(searchQuery.toLowerCase())) || ((_paper$authors2 = paper.authors) === null || _paper$authors2 === void 0 ? void 0 : _paper$authors2.some(author => author.toLowerCase().includes(searchQuery.toLowerCase()))) || ((_paper$topics = paper.topics) === null || _paper$topics === void 0 ? void 0 : _paper$topics.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase())));\n  });\n\n  // Event handlers\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleGraphClick = event => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n  const handleExport = () => {\n    const selectedIds = Array.from(selectedPapersRef.current);\n    const selectedPapers = papers.filter(node => selectedIds.includes(node.id));\n    const exportData = {\n      selected_papers: selectedPapers,\n      export_date: new Date().toISOString(),\n      graph_parameters: {\n        iterations,\n        cited_limit: citedLimit,\n        ref_limit: refLimit\n      }\n    };\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `refnet-export-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleBackToSearch = () => {\n    navigate('/');\n  };\n\n  // Load initial data\n  useEffect(() => {\n    loadGraphData();\n    loadPaperDetails();\n  }, [paperId]);\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - 300,\n        // Account for sidebar\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || graphData.nodes.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on('zoom', event => {\n      g.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Prepare data - all papers from backend are already filtered\n    const nodes = graphData.nodes.map(paper => {\n      const processedPaper = {\n        id: paper.id,\n        title: paper.title || 'Untitled',\n        authors: paper.authors && paper.authors.length > 0 ? paper.authors : ['No Authors'],\n        year: paper.year || new Date().getFullYear(),\n        citations: paper.citations || 0\n      };\n\n      // Debug: Log if we're creating a paper with \"No Authors\"\n      if (processedPaper.authors.includes('No Authors')) {\n        console.warn('Creating paper with No Authors:', {\n          id: paper.id,\n          title: paper.title,\n          originalAuthors: paper.authors,\n          processedAuthors: processedPaper.authors\n        });\n      }\n      return processedPaper;\n    });\n    console.log('Original graphData.nodes:', graphData.nodes.length);\n    console.log('Filtered nodes:', nodes.length);\n    console.log('Original graphData.links:', graphData.links.length);\n\n    // Debug: Check what's in the raw data\n    console.log('Raw graphData.nodes sample:', graphData.nodes.slice(0, 2).map(n => {\n      var _n$title;\n      return {\n        id: n.id,\n        title: (_n$title = n.title) === null || _n$title === void 0 ? void 0 : _n$title.substring(0, 30),\n        authors: n.authors,\n        authorsType: typeof n.authors\n      };\n    }));\n\n    // Create a set of valid node IDs for filtering links\n    const validNodeIds = new Set(nodes.map(node => node.id));\n\n    // Filter links to only include those where both source and target exist in the filtered nodes\n    const links = graphData.links.filter(link => validNodeIds.has(link.source) && validNodeIds.has(link.target)).map(link => {\n      // Find the actual node objects for D3.js\n      const sourceNode = nodes.find(n => n.id === link.source);\n      const targetNode = nodes.find(n => n.id === link.target);\n      return {\n        source: sourceNode,\n        target: targetNode\n      };\n    }).filter(link => link.source && link.target); // Ensure both source and target exist\n\n    console.log(`Graph data: ${nodes.length} nodes, ${links.length} links`);\n    console.log('Node IDs:', nodes.map(n => n.id));\n    console.log('Link sources/targets:', links.map(l => {\n      var _l$source, _l$target;\n      return `${((_l$source = l.source) === null || _l$source === void 0 ? void 0 : _l$source.id) || l.source} -> ${((_l$target = l.target) === null || _l$target === void 0 ? void 0 : _l$target.id) || l.target}`;\n    }));\n    console.log('Valid node IDs set:', Array.from(validNodeIds));\n    console.log('Original links before filtering:', graphData.links.map(l => `${l.source} -> ${l.target}`));\n\n    // Check if links reference valid nodes\n    const invalidLinks = links.filter(l => !l.source || !l.target);\n    if (invalidLinks.length > 0) {\n      console.warn('Invalid links found (missing source or target):', invalidLinks);\n    }\n\n    // Create force simulation with proper link handling\n    let simulation;\n    try {\n      simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(80).strength(0.5)) // Proper link force\n      .force('charge', d3.forceManyBody().strength(-300)) // Moderate repulsion\n      .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force('x', d3.forceX(dimensions.width / 2).strength(0.1)).force('y', d3.forceY(dimensions.height / 2).strength(0.1));\n    } catch (error) {\n      console.error('Error creating D3 simulation:', error);\n      return;\n    }\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links - simple lines without arrows\n    const link = g.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('stroke', '#cccccc').attr('stroke-opacity', 0.6).attr('stroke-width', 1);\n\n    // Create nodes with size based on citations\n    const node = g.append('g').attr('class', 'nodes').selectAll('circle').data(nodes).enter().append('circle').attr('r', d => Math.max(8, Math.min(25, Math.sqrt(d.citations) * 0.8))).attr('data-id', d => d.id).attr('data-selected', d => selectedPapersRef.current.has(d.id) ? 'true' : 'false').attr('fill', d => getTimelineColor(d.year, selectedPapersRef.current.has(d.id))).attr('stroke', 'none').style('filter', d => selectedPapersRef.current.has(d.id) ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none').style('cursor', 'pointer').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // Add labels positioned above nodes with better styling\n    const labels = g.append('g').attr('class', 'labels').selectAll('text').data(nodes).enter().append('text').attr('text-anchor', 'middle').attr('dy', -25) // Position above the node\n    .attr('data-id', d => d.id).style('font-size', '11px') // Slightly bigger for better readability\n    .style('fill', '#ffffff') // Pure white text for maximum readability\n    .style('font-weight', '600') // Bolder for better visibility\n    .style('text-shadow', '2px 2px 4px rgba(0,0,0,0.9)') // Stronger shadow for contrast\n    .style('pointer-events', 'none').style('opacity', 1.0) // Full opacity for maximum visibility\n    .text(d => {\n      const firstAuthor = d.authors && d.authors.length > 0 ? d.authors[0].split(' ')[0] : 'No Author';\n      const year = d.year && d.year !== 2025 ? d.year : 'N/A';\n      return `${firstAuthor}, ${year}`;\n    });\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      labels.attr('x', d => d.x).attr('y', d => d.y);\n    });\n\n    // Add end event to log simulation completion\n    simulation.on('end', () => {\n      console.log('D3 simulation completed');\n      console.log('Final node positions:', nodes.map(n => ({\n        id: n.id,\n        x: n.x,\n        y: n.y\n      })));\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - highlight connected nodes and dim others\n    node.on('mouseover', function (event, d) {\n      // Find connected node IDs\n      const connectedNodeIds = new Set();\n      const connectedLinkIds = new Set();\n\n      // Find connected nodes through links\n      links.forEach(link => {\n        if (link.source.id === d.id) {\n          connectedNodeIds.add(link.target.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        } else if (link.target.id === d.id) {\n          connectedNodeIds.add(link.source.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        }\n      });\n\n      // Dim all nodes except hovered and connected ones\n      node.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 1; // Keep hovered and connected nodes fully visible\n        } else {\n          return 0.1; // Dim unconnected nodes\n        }\n      });\n\n      // Hide text for unconnected nodes\n      labels.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 0.8; // Keep text visible for hovered and connected nodes\n        } else {\n          return 0; // Hide text for unconnected nodes\n        }\n      });\n\n      // Highlight connected links, dim others\n      link.style('opacity', linkData => {\n        const linkId = `${linkData.source.id}-${linkData.target.id}`;\n        if (connectedLinkIds.has(linkId)) {\n          return 1; // Highlight connected links\n        } else {\n          return 0.1; // Dim unconnected links\n        }\n      });\n\n      // Create or update hover tooltip\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div').attr('class', 'hover-tooltip').style('position', 'absolute').style('background', 'rgba(0, 0, 0, 0.9)').style('color', '#ffd700').style('padding', '8px 12px').style('border-radius', '4px').style('font-size', '12px').style('pointer-events', 'none').style('z-index', '1000').style('opacity', 0).style('border', '1px solid #ffd700');\n      }\n      tooltip.html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 10 + 'px').transition().duration(200).style('opacity', 1);\n    });\n    node.on('mouseout', function (event, d) {\n      // Reset all nodes to full opacity\n      node.style('opacity', 1);\n\n      // Reset all text to normal opacity\n      labels.style('opacity', 0.8);\n\n      // Reset all links to normal opacity\n      link.style('opacity', 0.4);\n\n      // Remove tooltip\n      d3.select('body').select('.hover-tooltip').transition().duration(200).style('opacity', 0).remove();\n    });\n\n    // Click handler - using ONLY direct DOM manipulation, NO React state updates\n    node.on('click', function (event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n\n      // Toggle selection in the DOM\n      d3.select(this).attr('data-selected', !isCurrentlySelected).attr('fill', getTimelineColor(d.year, !isCurrentlySelected)).style('filter', !isCurrentlySelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n\n      // Update text color to match selection state\n      const textElement = d3.select(`text[data-id=\"${d.id}\"]`);\n      textElement.style('fill', '#ffffff'); // Pure white text for maximum readability\n\n      // Update ref immediately\n      if (isCurrentlySelected) {\n        selectedPapersRef.current.delete(d.id);\n      } else {\n        selectedPapersRef.current.add(d.id);\n      }\n\n      // Update the corresponding reference item in the left panel\n      const referenceItem = document.querySelector(`[data-paper-id=\"${d.id}\"]`);\n      if (referenceItem) {\n        if (isCurrentlySelected) {\n          referenceItem.classList.remove('active');\n        } else {\n          referenceItem.classList.add('active');\n        }\n      } else {\n        console.log('Reference item not found for paper ID:', d.id);\n      }\n\n      // Update selected info display\n      updateSelectedInfo();\n\n      // NO React state updates to prevent re-renders\n      // The AI panel and other UI will be updated separately if needed\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [graphData.nodes, graphData.links, dimensions]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-viewer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading graph data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-viewer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error Loading Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSearch,\n          className: \"back-button\",\n          children: \"Back to Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToSearch,\n        className: \"back-button\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Citation Network Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), paperDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-paper-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: paperDetails.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_paperDetails$authors = paperDetails.authors) === null || _paperDetails$authors === void 0 ? void 0 : _paperDetails$authors.join(', '), \" \\u2022 \", paperDetails.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Iterations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          value: iterations,\n          onChange: e => setIterations(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cited Limit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: citedLimit,\n          onChange: e => setCitedLimit(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ref Limit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: refLimit,\n          onChange: e => setRefLimit(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rebuildGraph,\n        className: \"rebuild-button\",\n        children: \"Rebuild Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => handleSearch(e.target.value),\n        placeholder: \"Enter Keyword, DOI\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        children: \"\\uD83D\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"references-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"panel-title\",\n          children: [\"References (\", filteredPapers.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"selected-info-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"references-list\",\n          children: [filteredPapers.map((paper, index) => {\n            var _paper$authors3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-paper-id\": paper.id,\n              className: \"reference-item\",\n              onClick: event => {\n                const isCurrentlySelected = selectedPapersRef.current.has(paper.id);\n\n                // Update ref\n                if (isCurrentlySelected) {\n                  selectedPapersRef.current.delete(paper.id);\n                } else {\n                  selectedPapersRef.current.add(paper.id);\n                }\n\n                // Update the corresponding node in the graph\n                const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n                if (!graphNode.empty()) {\n                  const isSelected = !isCurrentlySelected;\n                  graphNode.attr('data-selected', isSelected ? 'true' : 'false').attr('fill', getTimelineColor(paper.year, isSelected)).style('filter', isSelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n                }\n\n                // Update the text color to match selection state\n                const textElement = d3.select(`text[data-id=\"${paper.id}\"]`);\n                textElement.style('fill', '#ffffff'); // Pure white text for maximum readability\n\n                // Update this reference item's visual state directly\n                const isSelected = !isCurrentlySelected;\n                if (isSelected) {\n                  event.currentTarget.classList.add('active');\n                } else {\n                  event.currentTarget.classList.remove('active');\n                }\n\n                // Update selected info display\n                updateSelectedInfo();\n\n                // NO React state updates to prevent re-renders\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reference-title\",\n                children: [index + 1, \". \", paper.title || 'Untitled Paper']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reference-authors\",\n                children: ((_paper$authors3 = paper.authors) === null || _paper$authors3 === void 0 ? void 0 : _paper$authors3.join(', ')) || 'No Authors'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reference-year\",\n                children: [paper.year, \" \\u2022 \", paper.citations || 0, \" citations\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this), paper.topics && paper.topics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reference-topics\",\n                children: paper.topics.slice(0, 3).map(topic => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"topic-tag\",\n                  children: topic\n                }, topic, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 19\n              }, this)]\n            }, paper.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this);\n          }), filteredPapers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No papers found. Try a different search term.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: handleExport,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        onClick: handleGraphClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click & drag to move nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-item\",\n            children: \"\\uD83D\\uDDB1\\uFE0F Click to select/unselect nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: dimensions.width,\n          height: dimensions.height,\n          className: \"graph-svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), getTimelineYears().length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-keymap\",\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: 'rgba(0, 0, 0, 0.8)',\n        padding: '25px 40px',\n        borderRadius: '8px',\n        boxShadow: '0 4px 20px rgba(255, 215, 0, 0.3)',\n        border: '1px solid #ffd700',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '15px',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '250px',\n          height: '12px',\n          background: 'linear-gradient(to right, rgba(255, 215, 0, 0.3), rgba(255, 215, 0, 1.0))',\n          borderRadius: '6px',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: '0',\n            top: '15px',\n            fontSize: '12px',\n            color: '#ffd700',\n            fontWeight: '500',\n            whiteSpace: 'nowrap'\n          },\n          children: getTimelineYears()[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            right: '0',\n            top: '15px',\n            fontSize: '12px',\n            color: '#ffd700',\n            fontWeight: '500',\n            whiteSpace: 'nowrap'\n          },\n          children: getTimelineYears()[getTimelineYears().length - 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          color: '#ffd700',\n          fontWeight: '500',\n          opacity: 0.8,\n          textAlign: 'center'\n        },\n        children: \"Older \\u2192 Newer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphViewerClean, \"cYl1wIPgaO+pHKFIvg3xk6sPMpY=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = GraphViewerClean;\nexport default GraphViewerClean;\nvar _c;\n$RefreshReg$(_c, \"GraphViewerClean\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useLocation","useNavigate","d3","graphAPI","paperAPI","jsxDEV","_jsxDEV","GraphViewerClean","_s","_location$state","_paperDetails$authors","paperId","location","navigate","svgRef","simulationRef","selectedPapersRef","Set","selectedPapers","setSelectedPapers","showAIPanel","setShowAIPanel","dimensions","setDimensions","width","height","searchQuery","setSearchQuery","loading","setLoading","error","setError","graphData","setGraphData","nodes","links","paperDetails","setPaperDetails","iterations","setIterations","citedLimit","setCitedLimit","refLimit","setRefLimit","initialPaperIds","state","paperIds","updateSelectedInfo","container","document","getElementById","selectedCount","current","size","Array","from","selectedList","map","_paper$authors","_paper$authors$","paper","find","p","id","authors","split","year","filter","Boolean","innerHTML","item","join","getTimelineColor","isSelected","length","years","n","y","minYear","Math","min","maxYear","max","normalizedYear","opacity","getTimelineYears","sort","a","b","uniqueYears","loadGraphData","response","buildGraph","buildMultipleGraph","edges","Error","err","_err$response","_err$response$data","console","data","loadPaperDetails","getPaper","rebuildGraph","papers","citations","filteredPapers","_paper$title","_paper$authors2","_paper$topics","title","toLowerCase","includes","some","author","topics","topic","handleSearch","query","handleGraphClick","event","target","currentTarget","handleExport","selectedIds","node","exportData","selected_papers","export_date","Date","toISOString","graph_parameters","cited_limit","ref_limit","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleBackToSearch","updateDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","processedPaper","getFullYear","warn","originalAuthors","processedAuthors","log","slice","_n$title","substring","authorsType","validNodeIds","link","has","source","sourceNode","targetNode","l","_l$source","_l$target","invalidLinks","simulation","forceSimulation","force","forceLink","d","distance","strength","forceManyBody","forceCenter","forceX","forceY","enter","sqrt","style","drag","dragstarted","dragged","dragended","labels","text","firstAuthor","x","active","alphaTarget","restart","subject","fx","fy","connectedNodeIds","connectedLinkIds","forEach","add","nodeData","linkData","linkId","tooltip","empty","html","pageX","pageY","transition","duration","isCurrentlySelected","textElement","delete","referenceItem","querySelector","classList","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","parseInt","placeholder","index","_paper$authors3","graphNode","ref","position","bottom","left","background","padding","borderRadius","boxShadow","border","display","flexDirection","alignItems","gap","zIndex","top","fontSize","color","fontWeight","whiteSpace","right","textAlign","_c","$RefreshReg$"],"sources":["/Users/dhruvachayapathy/Projects/RefNet/refnet/frontend/src/components/GraphViewerClean.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport * as d3 from 'd3';\nimport { graphAPI, paperAPI } from '../services/api';\nimport './GraphViewer.css';\n\nconst GraphViewerClean = () => {\n  const { paperId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const svgRef = useRef(null);\n  const simulationRef = useRef(null);\n  const selectedPapersRef = useRef(new Set());\n  const [selectedPapers, setSelectedPapers] = useState([]);\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [paperDetails, setPaperDetails] = useState(null);\n  const [iterations, setIterations] = useState(2);\n  const [citedLimit, setCitedLimit] = useState(2);\n  const [refLimit, setRefLimit] = useState(1);\n\n  // Get initial paper IDs from location state or params\n  const initialPaperIds = location.state?.paperIds || (paperId ? [paperId] : []);\n\n  // NO React state updates at all - keep everything in D3/refs only\n  \n  // Function to update selected info display using direct DOM manipulation\n  const updateSelectedInfo = () => {\n    const container = document.getElementById('selected-info-container');\n    if (!container) return;\n    \n    const selectedCount = selectedPapersRef.current.size;\n    if (selectedCount > 0) {\n      const selectedPapers = Array.from(selectedPapersRef.current);\n      const selectedList = selectedPapers.map(paperId => {\n        const paper = graphData.nodes.find(p => p.id === paperId);\n        return paper ? `${paper.authors?.[0]?.split(' ')[0] || 'No Author'}, ${paper.year}` : '';\n      }).filter(Boolean);\n      \n      container.innerHTML = `\n        <div class=\"selected-info\">\n          <div class=\"selected-count\">\n            <strong>${selectedCount} selected</strong>\n          </div>\n          <div class=\"selected-list\">\n            ${selectedList.map(item => `<div class=\"selected-item\">${item}</div>`).join('')}\n          </div>\n        </div>\n      `;\n    } else {\n      container.innerHTML = '';\n    }\n  };\n\n  // Simplified timeline color function - solid colors with opacity\n  const getTimelineColor = (year, isSelected) => {\n    if (graphData.nodes.length === 0) return isSelected ? 'rgba(124, 58, 237, 0.8)' : 'rgba(255, 215, 0, 0.8)';\n    \n    const years = graphData.nodes.map(n => n.year).filter(y => y);\n    const minYear = Math.min(...years);\n    const maxYear = Math.max(...years);\n    const normalizedYear = (year - minYear) / (maxYear - minYear);\n    \n    // Calculate transparency based on age (newer = more opaque)\n    const opacity = 0.3 + (normalizedYear * 0.7); // 0.3 to 1.0 opacity\n    \n    if (isSelected) {\n      // Selected nodes: solid purple with opacity\n      return `rgba(124, 58, 237, ${opacity})`;\n    } else {\n      // Unselected nodes: solid gold with opacity\n      return `rgba(255, 215, 0, ${opacity})`;\n    }\n  };\n\n  // Get timeline years for keymap\n  const getTimelineYears = () => {\n    const years = graphData.nodes.map(p => p.year).filter(y => y).sort((a, b) => a - b);\n    const uniqueYears = [...new Set(years)];\n    return uniqueYears;\n  };\n\n  // Load graph data from API\n  const loadGraphData = async () => {\n    if (initialPaperIds.length === 0) {\n      setError('No paper ID provided');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      let response;\n      if (initialPaperIds.length === 1) {\n        response = await graphAPI.buildGraph(initialPaperIds[0], iterations, citedLimit, refLimit);\n      } else {\n        response = await graphAPI.buildMultipleGraph(initialPaperIds, iterations, citedLimit, refLimit);\n      }\n\n      if (response && response.nodes) {\n        setGraphData({\n          nodes: response.nodes || [],\n          links: response.edges || []  // Backend returns 'edges', not 'links'\n        });\n      } else {\n        throw new Error('Invalid graph data received');\n      }\n    } catch (err) {\n      console.error('Error loading graph data:', err);\n      setError(err.response?.data?.error || 'Failed to load graph data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load paper details for the main paper\n  const loadPaperDetails = async () => {\n    if (!paperId) return;\n\n    try {\n      const response = await paperAPI.getPaper(paperId);\n      setPaperDetails(response);\n    } catch (err) {\n      console.error('Error loading paper details:', err);\n    }\n  };\n\n  // Rebuild graph with new parameters\n  const rebuildGraph = async () => {\n    await loadGraphData();\n  };\n\n  // Use API data instead of mock data\n  const papers = graphData.nodes || [];\n  const citations = graphData.links || [];\n\n  // Search functionality\n  const filteredPapers = papers.filter(paper =>\n    paper.title?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    paper.authors?.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())) ||\n    paper.topics?.some(topic => topic.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  // Event handlers\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const handleGraphClick = (event) => {\n    if (event.target === event.currentTarget) {\n      setSelectedPapers(new Set());\n      setShowAIPanel(false);\n    }\n  };\n\n  const handleExport = () => {\n    const selectedIds = Array.from(selectedPapersRef.current);\n    const selectedPapers = papers.filter(node => selectedIds.includes(node.id));\n    \n    const exportData = {\n      selected_papers: selectedPapers,\n      export_date: new Date().toISOString(),\n      graph_parameters: {\n        iterations,\n        cited_limit: citedLimit,\n        ref_limit: refLimit\n      }\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `refnet-export-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const handleBackToSearch = () => {\n    navigate('/');\n  };\n\n  // Load initial data\n  useEffect(() => {\n    loadGraphData();\n    loadPaperDetails();\n  }, [paperId]);\n\n  // Update dimensions on window resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth - 300, // Account for sidebar\n        height: window.innerHeight\n      });\n    };\n\n    // Set initial dimensions\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create and update the graph - Clean D3 implementation\n  useEffect(() => {\n    if (!dimensions.width || !dimensions.height || graphData.nodes.length === 0) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous graph\n\n    // Create main group\n    const g = svg.append('g');\n\n    // Create zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Prepare data - all papers from backend are already filtered\n    const nodes = graphData.nodes\n      .map(paper => {\n        const processedPaper = {\n          id: paper.id,\n          title: paper.title || 'Untitled',\n          authors: paper.authors && paper.authors.length > 0 ? paper.authors : ['No Authors'],\n          year: paper.year || new Date().getFullYear(),\n          citations: paper.citations || 0\n        };\n        \n        // Debug: Log if we're creating a paper with \"No Authors\"\n        if (processedPaper.authors.includes('No Authors')) {\n          console.warn('Creating paper with No Authors:', {\n            id: paper.id,\n            title: paper.title,\n            originalAuthors: paper.authors,\n            processedAuthors: processedPaper.authors\n          });\n        }\n        \n        return processedPaper;\n      });\n\n    console.log('Original graphData.nodes:', graphData.nodes.length);\n    console.log('Filtered nodes:', nodes.length);\n    console.log('Original graphData.links:', graphData.links.length);\n    \n    // Debug: Check what's in the raw data\n    console.log('Raw graphData.nodes sample:', graphData.nodes.slice(0, 2).map(n => ({\n      id: n.id,\n      title: n.title?.substring(0, 30),\n      authors: n.authors,\n      authorsType: typeof n.authors\n    })));\n\n    // Create a set of valid node IDs for filtering links\n    const validNodeIds = new Set(nodes.map(node => node.id));\n\n    // Filter links to only include those where both source and target exist in the filtered nodes\n    const links = graphData.links\n      .filter(link => validNodeIds.has(link.source) && validNodeIds.has(link.target))\n      .map(link => {\n        // Find the actual node objects for D3.js\n        const sourceNode = nodes.find(n => n.id === link.source);\n        const targetNode = nodes.find(n => n.id === link.target);\n        return {\n          source: sourceNode,\n          target: targetNode\n        };\n      })\n      .filter(link => link.source && link.target); // Ensure both source and target exist\n\n    console.log(`Graph data: ${nodes.length} nodes, ${links.length} links`);\n    console.log('Node IDs:', nodes.map(n => n.id));\n    console.log('Link sources/targets:', links.map(l => `${l.source?.id || l.source} -> ${l.target?.id || l.target}`));\n    console.log('Valid node IDs set:', Array.from(validNodeIds));\n    console.log('Original links before filtering:', graphData.links.map(l => `${l.source} -> ${l.target}`));\n    \n    // Check if links reference valid nodes\n    const invalidLinks = links.filter(l => !l.source || !l.target);\n    if (invalidLinks.length > 0) {\n      console.warn('Invalid links found (missing source or target):', invalidLinks);\n    }\n\n    // Create force simulation with proper link handling\n    let simulation;\n    try {\n      simulation = d3.forceSimulation(nodes)\n        .force('link', d3.forceLink(links).id(d => d.id).distance(80).strength(0.5)) // Proper link force\n        .force('charge', d3.forceManyBody().strength(-300)) // Moderate repulsion\n        .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n        .force('x', d3.forceX(dimensions.width / 2).strength(0.1))\n        .force('y', d3.forceY(dimensions.height / 2).strength(0.1));\n    } catch (error) {\n      console.error('Error creating D3 simulation:', error);\n      return;\n    }\n\n    // Store simulation reference\n    simulationRef.current = simulation;\n\n    // Create links - simple lines without arrows\n    const link = g.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(links)\n      .enter().append('line')\n      .attr('stroke', '#cccccc')\n      .attr('stroke-opacity', 0.6)\n      .attr('stroke-width', 1);\n\n    // Create nodes with size based on citations\n    const node = g.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(nodes)\n      .enter().append('circle')\n      .attr('r', d => Math.max(8, Math.min(25, Math.sqrt(d.citations) * 0.8)))\n      .attr('data-id', d => d.id)\n      .attr('data-selected', d => selectedPapersRef.current.has(d.id) ? 'true' : 'false')\n      .attr('fill', d => getTimelineColor(d.year, selectedPapersRef.current.has(d.id)))\n      .attr('stroke', 'none')\n      .style('filter', d => selectedPapersRef.current.has(d.id) ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none')\n      .style('cursor', 'pointer')\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    // Add labels positioned above nodes with better styling\n    const labels = g.append('g')\n      .attr('class', 'labels')\n      .selectAll('text')\n      .data(nodes)\n      .enter().append('text')\n      .attr('text-anchor', 'middle')\n      .attr('dy', -25) // Position above the node\n      .attr('data-id', d => d.id)\n      .style('font-size', '11px') // Slightly bigger for better readability\n      .style('fill', '#ffffff') // Pure white text for maximum readability\n      .style('font-weight', '600') // Bolder for better visibility\n      .style('text-shadow', '2px 2px 4px rgba(0,0,0,0.9)') // Stronger shadow for contrast\n      .style('pointer-events', 'none')\n      .style('opacity', 1.0) // Full opacity for maximum visibility\n      .text(d => {\n        const firstAuthor = d.authors && d.authors.length > 0 ? d.authors[0].split(' ')[0] : 'No Author';\n        const year = d.year && d.year !== 2025 ? d.year : 'N/A';\n        return `${firstAuthor}, ${year}`;\n      });\n\n    // Update positions on tick\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n\n      node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n\n      labels\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    });\n\n    // Add end event to log simulation completion\n    simulation.on('end', () => {\n      console.log('D3 simulation completed');\n      console.log('Final node positions:', nodes.map(n => ({id: n.id, x: n.x, y: n.y})));\n    });\n\n    // Drag functions\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    // Hover handlers - highlight connected nodes and dim others\n    node.on('mouseover', function(event, d) {\n      // Find connected node IDs\n      const connectedNodeIds = new Set();\n      const connectedLinkIds = new Set();\n      \n      // Find connected nodes through links\n      links.forEach(link => {\n        if (link.source.id === d.id) {\n          connectedNodeIds.add(link.target.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        } else if (link.target.id === d.id) {\n          connectedNodeIds.add(link.source.id);\n          connectedLinkIds.add(`${link.source.id}-${link.target.id}`);\n        }\n      });\n      \n      // Dim all nodes except hovered and connected ones\n      node.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 1; // Keep hovered and connected nodes fully visible\n        } else {\n          return 0.1; // Dim unconnected nodes\n        }\n      });\n      \n      // Hide text for unconnected nodes\n      labels.style('opacity', nodeData => {\n        if (nodeData.id === d.id || connectedNodeIds.has(nodeData.id)) {\n          return 0.8; // Keep text visible for hovered and connected nodes\n        } else {\n          return 0; // Hide text for unconnected nodes\n        }\n      });\n      \n      // Highlight connected links, dim others\n      link.style('opacity', linkData => {\n        const linkId = `${linkData.source.id}-${linkData.target.id}`;\n        if (connectedLinkIds.has(linkId)) {\n          return 1; // Highlight connected links\n        } else {\n          return 0.1; // Dim unconnected links\n        }\n      });\n      \n      // Create or update hover tooltip\n      let tooltip = d3.select('body').select('.hover-tooltip');\n      if (tooltip.empty()) {\n        tooltip = d3.select('body').append('div')\n          .attr('class', 'hover-tooltip')\n          .style('position', 'absolute')\n          .style('background', 'rgba(0, 0, 0, 0.9)')\n          .style('color', '#ffd700')\n          .style('padding', '8px 12px')\n          .style('border-radius', '4px')\n          .style('font-size', '12px')\n          .style('pointer-events', 'none')\n          .style('z-index', '1000')\n          .style('opacity', 0)\n          .style('border', '1px solid #ffd700');\n      }\n      \n      tooltip\n        .html(`\n          <div><strong>${d.title}</strong></div>\n          <div>${d.authors.join(', ')}</div>\n          <div>${d.year} • ${d.citations} citations</div>\n        `)\n        .style('left', (event.pageX + 10) + 'px')\n        .style('top', (event.pageY - 10) + 'px')\n        .transition()\n        .duration(200)\n        .style('opacity', 1);\n    });\n\n    node.on('mouseout', function(event, d) {\n      // Reset all nodes to full opacity\n      node.style('opacity', 1);\n      \n      // Reset all text to normal opacity\n      labels.style('opacity', 0.8);\n      \n      // Reset all links to normal opacity\n      link.style('opacity', 0.4);\n      \n      // Remove tooltip\n      d3.select('body').select('.hover-tooltip')\n        .transition()\n        .duration(200)\n        .style('opacity', 0)\n        .remove();\n    });\n\n    // Click handler - using ONLY direct DOM manipulation, NO React state updates\n    node.on('click', function(event, d) {\n      // Get current selection from the node's data\n      const isCurrentlySelected = d3.select(this).attr('data-selected') === 'true';\n      \n      // Toggle selection in the DOM\n      d3.select(this)\n        .attr('data-selected', !isCurrentlySelected)\n        .attr('fill', getTimelineColor(d.year, !isCurrentlySelected))\n        .style('filter', !isCurrentlySelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n      \n      // Update text color to match selection state\n      const textElement = d3.select(`text[data-id=\"${d.id}\"]`);\n      textElement.style('fill', '#ffffff'); // Pure white text for maximum readability\n      \n      // Update ref immediately\n      if (isCurrentlySelected) {\n        selectedPapersRef.current.delete(d.id);\n      } else {\n        selectedPapersRef.current.add(d.id);\n      }\n      \n      // Update the corresponding reference item in the left panel\n      const referenceItem = document.querySelector(`[data-paper-id=\"${d.id}\"]`);\n      if (referenceItem) {\n        if (isCurrentlySelected) {\n          referenceItem.classList.remove('active');\n        } else {\n          referenceItem.classList.add('active');\n        }\n      } else {\n        console.log('Reference item not found for paper ID:', d.id);\n      }\n      \n      // Update selected info display\n      updateSelectedInfo();\n      \n      // NO React state updates to prevent re-renders\n      // The AI panel and other UI will be updated separately if needed\n    });\n\n    // Cleanup\n    return () => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n      }\n      // Clean up any remaining tooltips\n      d3.select('body').selectAll('.hover-tooltip').remove();\n    };\n  }, [graphData.nodes, graphData.links, dimensions]);\n\n  if (loading) {\n    return (\n      <div className=\"graph-viewer-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading graph data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"graph-viewer-container\">\n        <div className=\"error-container\">\n          <h3>Error Loading Graph</h3>\n          <p>{error}</p>\n          <button onClick={handleBackToSearch} className=\"back-button\">\n            Back to Search\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"graph-viewer-container\">\n      {/* Header */}\n      <div className=\"graph-header\">\n        <button onClick={handleBackToSearch} className=\"back-button\">\n          ← Back to Search\n        </button>\n        <h1>Citation Network Graph</h1>\n        {paperDetails && (\n          <div className=\"main-paper-info\">\n            <h3>{paperDetails.title}</h3>\n            <p>{paperDetails.authors?.join(', ')} • {paperDetails.year}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Controls */}\n      <div className=\"graph-controls\">\n        <div className=\"control-group\">\n          <label>Iterations:</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"5\"\n            value={iterations}\n            onChange={(e) => setIterations(parseInt(e.target.value))}\n          />\n        </div>\n        <div className=\"control-group\">\n          <label>Cited Limit:</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"20\"\n            value={citedLimit}\n            onChange={(e) => setCitedLimit(parseInt(e.target.value))}\n          />\n        </div>\n        <div className=\"control-group\">\n          <label>Ref Limit:</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"20\"\n            value={refLimit}\n            onChange={(e) => setRefLimit(parseInt(e.target.value))}\n          />\n        </div>\n        <button onClick={rebuildGraph} className=\"rebuild-button\">\n          Rebuild Graph\n        </button>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => handleSearch(e.target.value)}\n          placeholder=\"Enter Keyword, DOI\"\n          className=\"search-input\"\n        />\n        <button className=\"search-btn\">🔍</button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* References Panel */}\n        <div className=\"references-panel\">\n          <h3 className=\"panel-title\">References ({filteredPapers.length})</h3>\n          \n          <div id=\"selected-info-container\"></div>\n          \n          <div className=\"references-list\">\n            {filteredPapers.map((paper, index) => (\n              <div\n                key={paper.id}\n                data-paper-id={paper.id}\n                className=\"reference-item\"\n                onClick={(event) => {\n                  const isCurrentlySelected = selectedPapersRef.current.has(paper.id);\n                  \n                  // Update ref\n                  if (isCurrentlySelected) {\n                    selectedPapersRef.current.delete(paper.id);\n                  } else {\n                    selectedPapersRef.current.add(paper.id);\n                  }\n                  \n                  // Update the corresponding node in the graph\n                  const graphNode = d3.select(`circle[data-id=\"${paper.id}\"]`);\n                  if (!graphNode.empty()) {\n                    const isSelected = !isCurrentlySelected;\n                    graphNode\n                      .attr('data-selected', isSelected ? 'true' : 'false')\n                      .attr('fill', getTimelineColor(paper.year, isSelected))\n                      .style('filter', isSelected ? 'drop-shadow(0 0 8px rgba(124, 58, 237, 0.6))' : 'none');\n                  }\n                  \n                  // Update the text color to match selection state\n                  const textElement = d3.select(`text[data-id=\"${paper.id}\"]`);\n                  textElement.style('fill', '#ffffff'); // Pure white text for maximum readability\n                  \n                  // Update this reference item's visual state directly\n                  const isSelected = !isCurrentlySelected;\n                  if (isSelected) {\n                    event.currentTarget.classList.add('active');\n                  } else {\n                    event.currentTarget.classList.remove('active');\n                  }\n                  \n                  // Update selected info display\n                  updateSelectedInfo();\n                  \n                  // NO React state updates to prevent re-renders\n                }}\n              >\n                <div className=\"reference-title\">\n                  {index + 1}. {paper.title || 'Untitled Paper'}\n                </div>\n                <div className=\"reference-authors\">\n                  {paper.authors?.join(', ') || 'No Authors'}\n                </div>\n                <div className=\"reference-year\">\n                  {paper.year} • {paper.citations || 0} citations\n                </div>\n                {paper.topics && paper.topics.length > 0 && (\n                  <div className=\"reference-topics\">\n                    {paper.topics.slice(0, 3).map(topic => (\n                      <span key={topic} className=\"topic-tag\">\n                        {topic}\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            {filteredPapers.length === 0 && (\n              <div className=\"no-results\">\n                No papers found. Try a different search term.\n              </div>\n            )}\n          </div>\n          \n          <button className=\"export-btn\" onClick={handleExport}>\n            Export\n          </button>\n        </div>\n\n        {/* Graph Visualization */}\n        <div className=\"graph-container\" onClick={handleGraphClick}>\n          {/* Instructions */}\n          <div className=\"graph-instructions\">\n            <div className=\"instruction-item\">🖱️ Click & drag to move nodes</div>\n            <div className=\"instruction-item\">🖱️ Click to select/unselect nodes</div>\n          </div>\n          \n          <svg\n            ref={svgRef}\n            width={dimensions.width}\n            height={dimensions.height}\n            className=\"graph-svg\"\n          />\n          \n        </div>\n\n        {/* AI Panel - Removed */}\n      </div>\n\n      {/* Timeline Keymap - Clean centered design */}\n      {getTimelineYears().length > 0 && (\n        <div className=\"timeline-keymap\" style={{\n          position: 'fixed',\n          bottom: '20px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          background: 'rgba(0, 0, 0, 0.8)',\n          padding: '25px 40px',\n          borderRadius: '8px',\n          boxShadow: '0 4px 20px rgba(255, 215, 0, 0.3)',\n          border: '1px solid #ffd700',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: '15px',\n          zIndex: 1000\n        }}>\n          <div style={{ \n            width: '250px', \n            height: '12px', \n            background: 'linear-gradient(to right, rgba(255, 215, 0, 0.3), rgba(255, 215, 0, 1.0))',\n            borderRadius: '6px',\n            position: 'relative'\n          }}>\n            <div style={{\n              position: 'absolute',\n              left: '0',\n              top: '15px',\n              fontSize: '12px',\n              color: '#ffd700',\n              fontWeight: '500',\n              whiteSpace: 'nowrap'\n            }}>\n              {getTimelineYears()[0]}\n            </div>\n            <div style={{\n              position: 'absolute',\n              right: '0',\n              top: '15px',\n              fontSize: '12px',\n              color: '#ffd700',\n              fontWeight: '500',\n              whiteSpace: 'nowrap'\n            }}>\n              {getTimelineYears()[getTimelineYears().length - 1]}\n            </div>\n          </div>\n          <div style={{ \n            fontSize: '12px', \n            color: '#ffd700', \n            fontWeight: '500',\n            opacity: 0.8,\n            textAlign: 'center'\n          }}>\n            Older → Newer\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GraphViewerClean;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}